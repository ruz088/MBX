#include "mbnrg_1b_A1B1C1D3E1F1G1H3_deg2_v1.h"

////////////////////////////////////////////////////////////////////////////////

namespace mbnrg_A1B1C1D3E1F1G1H3_deg2 {

mbnrg_A1B1C1D3E1F1G1H3_deg2_v1::mbnrg_A1B1C1D3E1F1G1H3_deg2_v1(const std::string mon1) {

    // =====>> BEGIN SECTION CONSTRUCTOR <<=====
    // =>> PASTE RIGHT BELOW THIS LINE <==
    if (mon1 == "nma") {
        coefficients = std::vector<double> {
            -2.668222600791208e+03, // 0
             3.779261291624869e+03, // 1
             5.966237201066562e+03, // 2
            -1.174445166308430e+03, // 3
            -5.059094191957264e+02, // 4
            -6.463090942597498e+03, // 5
            -4.303341181755987e+03, // 6
            -3.831255625420448e+03, // 7
            -9.249098919361338e+02, // 8
            -4.365702498963362e+02, // 9
            -3.082452188746046e+02, // 10
            -4.994977525675967e+03, // 11
            -1.081907563420255e-02, // 12
             2.275085299765926e+03, // 13
             2.713841579361479e+03, // 14
             3.731089377190498e+02, // 15
            -1.575097850547616e+03, // 16
             4.042327455131088e+03, // 17
            -1.352991351207997e+03, // 18
             5.146917313516839e+02, // 19
             8.422732798227816e+00, // 20
            -6.296259641371524e+02, // 21
            -4.026519376879290e+02, // 22
             2.779416338632478e+03, // 23
            -2.951922551567695e+02, // 24
            -6.972559890237060e+03, // 25
             8.390922770205842e+02, // 26
            -1.846286454537114e+03, // 27
             2.454718075762740e+03, // 28
            -8.913813866735004e+02, // 29
             9.546368064825427e+02, // 30
             2.942865844666210e+02, // 31
            -6.588581081573806e+02, // 32
             1.128960070186245e+03, // 33
             5.280819360981143e+02, // 34
            -2.567348879611490e+02, // 35
            -2.976688590640360e+03, // 36
             1.007395744721865e+03, // 37
            -1.144399328511837e+03, // 38
             7.588113070248634e+02, // 39
            -9.087913500484574e+02, // 40
            -1.413502428794672e+03, // 41
            -2.132839591149040e+03, // 42
             1.063039288681721e+02, // 43
             1.032884807542004e+01, // 44
            -2.324648751942810e-03, // 45
             3.879648611117326e+03, // 46
             5.017919288861949e+02, // 47
            -1.065812006148660e+03, // 48
            -1.569520876178308e+03, // 49
             1.582489616170555e+03, // 50
             6.306409857920287e-01, // 51
             1.886011761628988e+03, // 52
             2.407541410015537e+03, // 53
            -1.923790285614675e+01, // 54
            -4.964425607775858e+01, // 55
            -1.752218671241666e+02, // 56
            -1.121114549493396e+03, // 57
             1.023206454846313e+03, // 58
            -3.164572240099227e+03, // 59
             8.490839712389674e+02, // 60
             2.864893469753474e+03, // 61
            -9.811043636898387e+02, // 62
             2.417827506716196e+03, // 63
            -1.559980546026987e+02, // 64
             7.039585498539012e+02, // 65
            -2.884318571576756e+02, // 66
            -2.745398238087951e+03, // 67
            -3.209355066670641e+01, // 68
             4.902378526340673e+02, // 69
            -1.242741925849409e+03, // 70
            -1.785889800740004e+03, // 71
            -8.940219261834155e+02, // 72
            -3.119724761033542e+03, // 73
            -2.130797219505006e+03, // 74
             5.971787616628831e+02, // 75
             5.151296043636464e+01, // 76
             1.092072206191535e+03, // 77
             1.088335717528455e+03, // 78
            -7.596974203664072e+02, // 79
             1.084066770630755e+01, // 80
            -1.597066283653986e+03, // 81
             2.660139153374678e+03, // 82
             7.038692988032863e+02, // 83
             5.027972236498821e+02, // 84
             4.311986046106054e+00, // 85
             4.913303934129701e+02, // 86
             1.732869240287702e+03, // 87
             9.007380970759049e+02, // 88
             8.678890129361551e-04, // 89
            -2.533320743952137e+03, // 90
            -7.746749517951079e+02, // 91
            -7.718546434187355e+01, // 92
            -7.585902984663171e+01, // 93
             8.561507189802531e+01, // 94
            -4.578344267911715e-03, // 95
             3.226280518933752e+02, // 96
             2.984365996650211e+03, // 97
            -1.055597013784052e+02, // 98
             2.178148244478168e+03, // 99
             7.125558789669227e+02, // 100
             8.789606503381873e+02, // 101
            -3.032115968418547e+03, // 102
            -2.488237608756353e+03, // 103
             8.267646159661451e+02, // 104
             9.636507886082597e+02, // 105
            -7.255041718810846e+02, // 106
            -1.040338342990906e+03, // 107
             1.209278611478370e+00, // 108
             2.045482781399775e+03, // 109
            -1.911641083674563e-07, // 110
            -7.370076612514390e+02, // 111
             1.348680791905436e+02, // 112
            -1.576895433399059e+01, // 113
            -2.890043538800277e+03, // 114
            -1.866274295088812e+00, // 115
            -3.513359609473577e+03, // 116
            -1.061054030185043e+03, // 117
            -3.428287530421801e+02, // 118
            -2.083159173443409e+02, // 119
            -2.690234424648986e+01, // 120
            -2.244524088597979e+02, // 121
             1.006866118357501e+03, // 122
             8.542044859360427e+03, // 123
             1.735618797143562e+03, // 124
             3.900329422481936e+03, // 125
            -2.451754390581385e+03, // 126
             1.143695218839199e+04, // 127
             3.343560732830462e+03, // 128
            -1.577807547269453e+02, // 129
            -1.039112960869455e+03, // 130
            -4.731628128466151e-03, // 131
            -1.444519948082989e+03, // 132
             1.728073578847544e+03, // 133
            -1.294929379570650e+03, // 134
            -3.839209913170345e+02, // 135
            -1.501353866695439e-02, // 136
             1.819453389875030e+03, // 137
            -2.938304856983040e+02, // 138
            -8.712514705557858e-03, // 139
            -2.633311499568764e+03, // 140
             2.741204593987326e+03, // 141
            -4.567196159447125e-03, // 142
            -2.945345298938981e+01, // 143
            -3.137024252770306e+01, // 144
             3.387916245948100e-03, // 145
             1.291317882481212e+03, // 146
             1.477168881331810e+03, // 147
            -1.424484482322299e+02, // 148
            -1.503217702387123e-03, // 149
             5.871586353622136e+03, // 150
            -9.512638962197016e+02, // 151
            -6.790736581966350e+01, // 152
            -2.650079511352984e+01, // 153
            -9.460264034540236e+02, // 154
             3.368395419984254e+02, // 155
            -6.881549485782602e+03, // 156
            -4.781164780630643e+02, // 157
             7.417077678370620e+02, // 158
            -1.069728624771610e+02, // 159
             1.059958552868795e+03, // 160
             1.427799707819173e+02, // 161
            -1.144163409049694e+02, // 162
             5.142428870978845e+01, // 163
             1.430296830634288e+02, // 164
             3.990222134812146e-01, // 165
            -2.328201461284401e+02, // 166
            -3.268907393107431e+03, // 167
            -3.422017605728715e+01, // 168
             3.873174633607665e+02, // 169
            -2.693103656358870e+02, // 170
             1.215599158987461e+02, // 171
             7.888176879967944e-01, // 172
            -4.376496031690591e+01, // 173
            -3.419884923954510e+02, // 174
            -2.344555602704834e+02, // 175
             4.374785630660739e+02, // 176
             1.254636740246666e+03, // 177
             2.573566260595273e+02, // 178
             2.901562102966818e+03, // 179
            -1.986689489594095e+02, // 180
            -1.818790381148685e+03, // 181
             4.606352676043709e+00, // 182
            -1.384123424683065e+02, // 183
             1.943338482322135e+02, // 184
             1.926349820845875e+02, // 185
            -1.742005370278915e+02, // 186
             1.266808401300807e+03, // 187
             7.496603841497989e+02, // 188
            -1.111898550554267e+03, // 189
             8.071067464466842e+02, // 190
             3.865452402660654e+03, // 191
             2.119750553972665e+03, // 192
            -3.307182858595097e+03, // 193
            -4.330241773414805e+02, // 194
             3.199917767075456e-03, // 195
            -4.857222628317214e+01, // 196
            -4.250824187914269e+02, // 197
             6.085636578921110e+01, // 198
             5.200332535897162e+03, // 199
             2.385623551421675e+03, // 200
            -7.025778143414365e+02, // 201
             2.003223731826726e+03, // 202
             4.515613721455321e+00, // 203
             1.357745129775882e+03, // 204
            -2.198763706755009e+02, // 205
            -1.724376305263290e+03, // 206
             1.514565183520349e+00, // 207
             5.877812533768748e-03, // 208
             3.360663415631448e+02, // 209
            -3.356513640564391e+03, // 210
             2.672010842423736e+03, // 211
             4.976788605577235e+02, // 212
            -3.547334743608843e+02, // 213
            -1.669934161714803e+03, // 214
            -4.057438421293798e+03, // 215
            -8.331901519038789e+02, // 216
             1.350313955980051e+03, // 217
            -8.819489062220409e+02, // 218
             6.644059746884688e+03, // 219
            -4.935171917585722e+00, // 220
             2.770455815845555e-02, // 221
             2.390937725222401e+03, // 222
            -9.543635206419033e+02, // 223
            -1.633849096026962e+03, // 224
             6.899545367931862e+02, // 225
            -2.633362539762675e+03, // 226
            -1.847986299659875e+03, // 227
            -1.052370993062409e+02, // 228
             2.766185575749275e+02, // 229
            -6.842073603313365e+01, // 230
             4.511991135505219e+02, // 231
             2.464536144406152e+02, // 232
             5.037103419223878e-01, // 233
             4.011279568649517e+01, // 234
             1.435016144331238e+03, // 235
            -3.875934468827895e+03, // 236
             1.189702309739776e+03, // 237
             8.816207581494053e+02, // 238
             8.410232836154840e+01, // 239
             9.862104823640521e-01, // 240
            -8.380635764948506e+02, // 241
            -2.213279182972019e+02, // 242
             5.236090179013283e+03, // 243
            -5.482635049062904e+02, // 244
            -2.348608192483730e-07, // 245
             1.703704884325676e+03, // 246
             4.285303543849829e-06, // 247
             1.180562706394269e+03, // 248
             1.805254494141138e+02, // 249
             8.471632571113783e+01, // 250
             1.146995159734267e+03, // 251
             1.061110158847301e+03, // 252
            -7.726012323759012e+02, // 253
            -1.710251507991698e-03, // 254
            -1.280038868315030e+03, // 255
            -4.082849255565489e+02, // 256
             4.316671194424176e+00, // 257
            -2.357474286219704e+02, // 258
            -2.160308413563907e+03, // 259
            -3.099272232204910e+02, // 260
             1.091278886947613e+04, // 261
             3.488517065007694e+03, // 262
             8.129836560765431e+02, // 263
             3.261146985374393e+03, // 264
            -1.191565796967847e+03, // 265
             2.161578349160794e+03, // 266
             5.267093290139744e+02, // 267
             1.589591651750908e+03, // 268
            -4.248052767309678e+02, // 269
             4.099917362550348e-05, // 270
             3.279642507159187e-02, // 271
            -1.953350149289310e+03, // 272
             3.399371093659288e+02, // 273
            -1.358370234681220e+01, // 274
             1.855241035411243e+03, // 275
             7.668130656215371e+02, // 276
             2.926301786894041e+03, // 277
            -2.675550698967391e+03, // 278
             3.707101316955018e+02, // 279
            -2.641691658692519e+02, // 280
             2.768814054336058e+03, // 281
            -2.830810649901292e+01, // 282
             1.139637931983495e+03, // 283
            -1.336316578559982e+02, // 284
             4.645313027380190e+03, // 285
            -1.003206940724582e-02, // 286
            -2.087699620798158e+03, // 287
            -8.167699305066487e+02, // 288
            -5.457094505753283e+02, // 289
             4.532344154219864e+01, // 290
            -3.043049462668194e+02, // 291
             4.476671446596727e+02, // 292
             2.091280297438661e+03, // 293
             1.173669141773643e+02, // 294
            -2.069091516859110e+02, // 295
            -5.426055378210656e+02, // 296
             2.154658992622351e+03, // 297
             4.607504446778230e+02, // 298
            -3.349382707167489e+03, // 299
            -9.876688360687563e+02, // 300
            -3.919717994742343e-04, // 301
             6.483714326316212e+03, // 302
             3.384343738796395e+03, // 303
            -1.271126021195945e-02, // 304
             2.203306145293861e+03, // 305
            -1.329007091629880e+03, // 306
            -1.986819633644647e+03, // 307
            -8.354549067251384e+02, // 308
            -1.044329339744551e+03, // 309
            -7.554658262332188e+02, // 310
             2.175374030569528e+01, // 311
            -6.379752472123815e+01, // 312
            -1.101019509093590e-05, // 313
            -5.040908335025480e+00, // 314
             1.521765599758641e+03, // 315
             7.338892263571721e+02, // 316
             4.319251310356759e-05, // 317
             6.723557257701223e+02, // 318
             5.816701424330553e-01, // 319
             4.557278416580703e+02, // 320
             2.085931377684373e+00, // 321
             2.564438682750903e+03, // 322
             1.436170650542572e+00, // 323
             6.841313871377728e-04, // 324
            -2.208389486819016e+03, // 325
             2.110422990858700e+01, // 326
             1.222001556032006e+03, // 327
             1.680677020939741e+03, // 328
            -7.072357270809209e+02, // 329
             6.673256738611343e+02, // 330
             1.235110664494078e+03, // 331
            -3.775228144851535e+02, // 332
            -1.004635770849905e+03, // 333
             2.313144648073734e+02, // 334
            -1.928166730548771e+02, // 335
            -3.809353393203189e+03, // 336
             4.366824173476894e+03, // 337
             7.329062882229173e+02, // 338
             2.531129428891188e+03, // 339
            -2.806170502891378e+02, // 340
            -2.660714836307973e+02, // 341
            -2.010438743575160e+03, // 342
            -3.259295433082585e+01, // 343
             9.350708924192212e+01, // 344
             1.744193549474484e+03, // 345
            -1.912566524875079e-02, // 346
            -9.453296100376762e+02, // 347
             9.125887746490256e+02, // 348
            -2.882120939528906e+01, // 349
             1.438113112096725e+03, // 350
             8.766227380039110e+02, // 351
             7.329922760353415e+01, // 352
             1.946710899046839e+04, // 353
             2.402149468789417e+01, // 354
            -3.967462288477369e+03, // 355
            -6.034362242345203e+02, // 356
             1.884976230911286e+01, // 357
             3.021828456583979e+03, // 358
             1.033786724264061e+03, // 359
             4.325826046713470e+02, // 360
             4.092846385046251e+02, // 361
            -9.785844323542251e+01, // 362
            -4.608815412998442e+02, // 363
            -5.080542545069375e+02, // 364
            -1.098686607155772e+02, // 365
            -6.860061090863083e-03, // 366
            -2.128410080078450e+03, // 367
             2.735021200788984e+03, // 368
             1.174132888745793e+02, // 369
            -6.614664309273538e+02, // 370
            -1.575489248720452e+00, // 371
            -3.154655602331925e+03, // 372
             7.660695234581286e+01, // 373
            -2.637124840034546e+03, // 374
             5.700334448668150e+01, // 375
            -1.370104314556299e-06, // 376
             1.729530523369206e+03, // 377
             6.888756745281726e+02, // 378
             4.145290761305223e+03, // 379
            -3.115510418832293e+00, // 380
            -2.394882935486485e+02, // 381
            -3.023050793435641e+03, // 382
            -2.033027729205332e+03, // 383
             1.914692530892533e+03, // 384
             2.397484415103987e+03, // 385
             3.712977505841969e+02, // 386
             2.933549093871169e-02, // 387
            -4.494920607405688e+02, // 388
             9.208926787245504e+02, // 389
            -1.697983930958281e-04, // 390
            -4.420270233201039e-03, // 391
             2.139599012173000e-03, // 392
            -3.058808328606625e+02, // 393
            -1.117969863126163e+03, // 394
            -7.729043433813017e+02, // 395
             3.967162727643177e+02, // 396
             1.739505846482110e+03, // 397
             1.638960783249566e+03, // 398
            -1.176175040815647e+03, // 399
             3.261935950012111e+02, // 400
            -2.677651063404750e+01, // 401
             6.469107865943704e+02, // 402
             3.835430228438407e+02, // 403
            -1.482572475302878e+03, // 404
            -9.829117295432033e+02, // 405
             2.913483810887757e-06, // 406
             1.897176014717528e+01, // 407
             2.612980203618390e+02, // 408
            -2.506731134431813e+02, // 409
            -2.524301812760026e-02, // 410
             8.351984830479166e-03, // 411
            -6.782842085445453e+02, // 412
             5.853375204845085e+01, // 413
            -8.372647191660332e+02, // 414
            -1.130796501447290e+03, // 415
             2.735373018890388e-03, // 416
             2.283179355859881e+01, // 417
            -8.807094566876975e+01, // 418
             3.014959145514263e+01, // 419
            -3.333719592163892e+02, // 420
            -1.406464595717127e+03, // 421
             2.941943064070922e+02, // 422
             7.360291606163207e+02, // 423
            -1.557459711316899e+03, // 424
            -3.389997876992656e+01, // 425
            -9.044509088950825e+02, // 426
            -2.295556344602034e+03, // 427
            -6.976348440997223e+02, // 428
             2.135444242784230e+03, // 429
             3.125049745222054e+02, // 430
             1.676184746487026e-01, // 431
             3.438422498116000e-08, // 432
             3.347458008936728e+02, // 433
             1.561101697515031e+03, // 434
             7.111714074874377e+02, // 435
             2.012667966120545e+03, // 436
             3.447459042144758e+03, // 437
             2.468863226256963e+04, // 438
            -1.124593104178689e+03, // 439
            -7.841790011574740e+02, // 440
             5.068628762923871e+02, // 441
            -1.535731443193622e+03, // 442
             1.003566737427895e+03, // 443
            -3.856705903447672e+02, // 444
             1.839940607510184e+03, // 445
            -4.007293088451344e+02, // 446
             6.847477328602561e+02, // 447
             3.971995579522350e+03, // 448
             4.657433612925080e+03, // 449
             4.162333313294015e+03, // 450
             4.100665840252159e-04, // 451
             5.993388119977802e+02, // 452
            -1.800764849801643e+02, // 453
            -8.842392102880724e+02, // 454
             1.122074883689246e+03, // 455
            -3.111473592897676e+02, // 456
             4.501532981801464e+03, // 457
             3.837010974469068e+02, // 458
            -1.071579155016635e+03, // 459
             6.224896752081824e-01, // 460
            -1.661616780870933e+03, // 461
            -1.037681730967844e+02, // 462
            -2.731458910349560e+03, // 463
            -1.828091255336569e+02, // 464
            -4.102284110943025e+01, // 465
             9.367966912421390e-03, // 466
             7.086838695039954e+02, // 467
            -3.518031436916817e-02, // 468
             4.446983560924337e-01, // 469
            -3.116932693896434e+02, // 470
             1.568062587978678e+03, // 471
            -1.480681640055723e+02, // 472
            -1.086774184323132e+03, // 473
            -3.771934413113639e+02, // 474
             3.640331183962099e+02, // 475
            -2.226633443262286e+03, // 476
            -5.764049485740352e+01, // 477
            -4.099254501140368e+03, // 478
            -1.604654269963784e+03, // 479
            -1.775886297366437e+02, // 480
            -7.927685487290493e+02, // 481
             4.872512610843600e+02, // 482
             6.288790212255848e-01, // 483
             4.508661556749017e+01, // 484
             6.006053998009636e+02, // 485
            -3.645313384768025e+00, // 486
             1.936477960058695e+03, // 487
             4.454177526375797e+00, // 488
             4.145538979826174e+00, // 489
            -2.920677711677961e+02, // 490
            -6.056570254779805e+02, // 491
             1.714134612188810e+03, // 492
             6.513070203952503e-05, // 493
             1.730567706496526e+03, // 494
            -2.149373550167565e+01, // 495
             1.486402315977782e+03, // 496
            -4.625342609297053e+03, // 497
             6.272193941297866e-03, // 498
            -4.384389614710351e+03, // 499
            -4.554017923986599e+00, // 500
            -3.076540122164466e+03, // 501
            -8.172597647020416e+02, // 502
            -5.379832881703929e+02, // 503
            -5.914415595548087e+02, // 504
             1.382814895919310e+01, // 505
             7.384840567825075e+02, // 506
             3.020774474884527e+03, // 507
            -9.470719375644543e+01, // 508
            -1.272953500634968e+03, // 509
            -1.566445384415539e+02, // 510
            -2.168586071469487e+03, // 511
             1.748971782729653e+03, // 512
            -3.700507250448962e+02, // 513
            -3.764574069204477e+03, // 514
            -2.564488232542146e+02, // 515
             2.810549956108100e+02, // 516
            -2.532439926726988e+02, // 517
             8.611351998687798e+02, // 518
            -7.126744049347774e+01, // 519
            -6.336619310682722e+02, // 520
            -2.567233861474361e+03, // 521
            -1.915589576415572e+01, // 522
             4.603599100532219e+02, // 523
             1.852951970576059e+03, // 524
            -1.267616842818672e+03, // 525
            -4.847835327118559e+03, // 526
            -1.981880219691802e+03, // 527
            -2.039290115346005e+02, // 528
            -2.997370739429291e+01, // 529
             1.472890852175464e+03, // 530
            -7.907427236769082e+02, // 531
            -9.071061368066098e+02, // 532
             1.399172030860809e-03, // 533
             2.300244912150812e+03, // 534
             2.806775074239933e+03, // 535
            -2.230838127618703e+03, // 536
             4.979230495653399e+02, // 537
            -8.667019216521967e+02, // 538
            -6.242610966290275e+02, // 539
            -6.045704307555335e+02, // 540
            -2.499663392868407e+03, // 541
            -6.218104120788516e+02, // 542
            -4.394913883926356e+03, // 543
             1.679655865640220e+03, // 544
            -2.357139197838877e+02, // 545
             1.279887809105389e-04, // 546
            -3.722699649942603e+02, // 547
             4.328198357552067e+00, // 548
            -1.359632899073048e+03, // 549
             4.043630387944835e+02, // 550
            -2.984752890784076e+02, // 551
            -7.770970520475921e+02, // 552
            -2.238367386099644e+02, // 553
            -3.095302646906391e+02, // 554
            -2.513419427954330e+02, // 555
             9.846039549522762e+01, // 556
             1.857187391218638e+03, // 557
             8.039416034928134e+02, // 558
             2.510655104382341e+02, // 559
             2.669900295133627e-03, // 560
            -3.189632941319826e+01, // 561
             2.359425325822842e+03, // 562
             7.869107060704453e+02, // 563
             1.776012686141437e+03, // 564
             2.778774790150316e+02, // 565
             5.941717496152099e+02, // 566
             8.106868768803333e+02}; // 567
    m_k_x_intra_A_B_1 =  2.095251548320212e+00; // A^(-1))
    m_k_x_intra_A_C_1 =  1.656135201625196e+00; // A^(-1))
    m_k_x_intra_A_D_1 =  4.294031021865590e-01; // A^(-1))
    m_k_x_intra_A_E_1 =  1.367019831636128e+00; // A^(-1))
    m_k_x_intra_A_F_1 =  1.378925115661626e+00; // A^(-1))
    m_k_x_intra_A_G_1 =  6.890665378597079e+00; // A^(-1))
    m_k_x_intra_A_H_1 =  9.264999840728749e-02; // A^(-1))
    m_k_x_intra_B_C_1 =  1.268271446636493e+00; // A^(-1))
    m_k_x_intra_B_D_1 =  5.404586518193417e-02; // A^(-1))
    m_k_x_intra_B_E_1 =  2.871422296737676e-01; // A^(-1))
    m_k_x_intra_B_F_1 =  2.013374857920449e-01; // A^(-1))
    m_k_x_intra_B_G_1 =  1.009219948377956e+00; // A^(-1))
    m_k_x_intra_B_H_1 =  9.212911859791508e-01; // A^(-1))
    m_k_x_intra_C_D_1 =  1.624291556641298e+00; // A^(-1))
    m_k_x_intra_C_E_1 =  1.626766162570290e+00; // A^(-1))
    m_k_x_intra_C_F_1 =  3.548329407843377e+00; // A^(-1))
    m_k_x_intra_C_G_1 =  7.320592069530465e-01; // A^(-1))
    m_k_x_intra_C_H_1 =  6.196217645683550e+00; // A^(-1))
    m_k_x_intra_D_D_1 =  4.957667797698305e-01; // A^(-1))
    m_k_x_intra_D_E_1 =  2.462095803039817e+00; // A^(-1))
    m_k_x_intra_D_F_1 =  8.730934752532966e-01; // A^(-1))
    m_k_x_intra_D_G_1 =  5.069868008134010e+00; // A^(-1))
    m_k_x_intra_D_H_1 =  1.079202691659702e-01; // A^(-1))
    m_k_x_intra_E_F_1 =  2.319593763170467e+00; // A^(-1))
    m_k_x_intra_E_G_1 =  1.408617644695777e+00; // A^(-1))
    m_k_x_intra_E_H_1 =  8.103521325350937e-01; // A^(-1))
    m_k_x_intra_F_G_1 =  3.111611425169536e-01; // A^(-1))
    m_k_x_intra_F_H_1 =  2.756194095852305e+00; // A^(-1))
    m_k_x_intra_G_H_1 =  1.625252261429646e+00; // A^(-1))
    m_k_x_intra_H_H_1 =  2.292517367483015e+00; // A^(-1))
    m_ri =  6.000000000000000e+00; // A
    m_ro =  8.000000000000000e+00; // A

    } // end if mon1 == "nma"

    // =====>> END SECTION CONSTRUCTOR <<=====
}

//----------------------------------------------------------------------------//

double mbnrg_A1B1C1D3E1F1G1H3_deg2_v1::f_switch(const double r, double& g)
{
    if (r > m_ro) {
        g = 0.0;
        return 0.0;
    } else if (r > m_ri) {
        const double t1 = M_PI/(m_ro - m_ri);
        const double x = (r - m_ri)*t1;
        g = - std::sin(x)*t1/2.0;
        return (1.0 + std::cos(x))/2.0;
    } else {
        g = 0.0;
        return 1.0;
    }
}

//----------------------------------------------------------------------------//

 std::vector<double> mbnrg_A1B1C1D3E1F1G1H3_deg2_v1::eval(const double *xyz1, const size_t n) {
    std::vector<double> energies(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(36);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 36*j;


        if (false ) {
             continue;
        }

        std::copy(mon1, mon1 + 36, xyz.begin() + 0);


        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_C_1_a = xyz.data() + 6;

        const double* coords_D_1_a = xyz.data() + 9;

        const double* coords_D_2_a = xyz.data() + 12;

        const double* coords_D_3_a = xyz.data() + 15;

        const double* coords_E_1_a = xyz.data() + 18;

        const double* coords_F_1_a = xyz.data() + 21;

        const double* coords_G_1_a = xyz.data() + 24;

        const double* coords_H_1_a = xyz.data() + 27;

        const double* coords_H_2_a = xyz.data() + 30;

        const double* coords_H_3_a = xyz.data() + 33;


        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        variable vs[66];

        double xs[66];

        xs[0] = vs[0].v_exp(m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[1] = vs[1].v_exp(m_k_x_intra_A_C_1, coords_A_1_a, coords_C_1_a);
        xs[2] = vs[2].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_1_a);
        xs[3] = vs[3].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_2_a);
        xs[4] = vs[4].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_3_a);
        xs[5] = vs[5].v_exp(m_k_x_intra_A_E_1, coords_A_1_a, coords_E_1_a);
        xs[6] = vs[6].v_exp(m_k_x_intra_A_F_1, coords_A_1_a, coords_F_1_a);
        xs[7] = vs[7].v_exp(m_k_x_intra_A_G_1, coords_A_1_a, coords_G_1_a);
        xs[8] = vs[8].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_1_a);
        xs[9] = vs[9].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_2_a);
        xs[10] = vs[10].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_3_a);
        xs[11] = vs[11].v_exp(m_k_x_intra_B_C_1, coords_B_1_a, coords_C_1_a);
        xs[12] = vs[12].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_1_a);
        xs[13] = vs[13].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_2_a);
        xs[14] = vs[14].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_3_a);
        xs[15] = vs[15].v_exp(m_k_x_intra_B_E_1, coords_B_1_a, coords_E_1_a);
        xs[16] = vs[16].v_exp(m_k_x_intra_B_F_1, coords_B_1_a, coords_F_1_a);
        xs[17] = vs[17].v_exp(m_k_x_intra_B_G_1, coords_B_1_a, coords_G_1_a);
        xs[18] = vs[18].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_1_a);
        xs[19] = vs[19].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_2_a);
        xs[20] = vs[20].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_3_a);
        xs[21] = vs[21].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_1_a);
        xs[22] = vs[22].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_2_a);
        xs[23] = vs[23].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_3_a);
        xs[24] = vs[24].v_exp(m_k_x_intra_C_E_1, coords_C_1_a, coords_E_1_a);
        xs[25] = vs[25].v_exp(m_k_x_intra_C_F_1, coords_C_1_a, coords_F_1_a);
        xs[26] = vs[26].v_exp(m_k_x_intra_C_G_1, coords_C_1_a, coords_G_1_a);
        xs[27] = vs[27].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_1_a);
        xs[28] = vs[28].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_2_a);
        xs[29] = vs[29].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_3_a);
        xs[30] = vs[30].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_2_a);
        xs[31] = vs[31].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_3_a);
        xs[32] = vs[32].v_exp(m_k_x_intra_D_E_1, coords_D_1_a, coords_E_1_a);
        xs[33] = vs[33].v_exp(m_k_x_intra_D_F_1, coords_D_1_a, coords_F_1_a);
        xs[34] = vs[34].v_exp(m_k_x_intra_D_G_1, coords_D_1_a, coords_G_1_a);
        xs[35] = vs[35].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_1_a);
        xs[36] = vs[36].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_2_a);
        xs[37] = vs[37].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_3_a);
        xs[38] = vs[38].v_exp(m_k_x_intra_D_D_1, coords_D_2_a, coords_D_3_a);
        xs[39] = vs[39].v_exp(m_k_x_intra_D_E_1, coords_D_2_a, coords_E_1_a);
        xs[40] = vs[40].v_exp(m_k_x_intra_D_F_1, coords_D_2_a, coords_F_1_a);
        xs[41] = vs[41].v_exp(m_k_x_intra_D_G_1, coords_D_2_a, coords_G_1_a);
        xs[42] = vs[42].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_1_a);
        xs[43] = vs[43].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_2_a);
        xs[44] = vs[44].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_3_a);
        xs[45] = vs[45].v_exp(m_k_x_intra_D_E_1, coords_D_3_a, coords_E_1_a);
        xs[46] = vs[46].v_exp(m_k_x_intra_D_F_1, coords_D_3_a, coords_F_1_a);
        xs[47] = vs[47].v_exp(m_k_x_intra_D_G_1, coords_D_3_a, coords_G_1_a);
        xs[48] = vs[48].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_1_a);
        xs[49] = vs[49].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_2_a);
        xs[50] = vs[50].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_3_a);
        xs[51] = vs[51].v_exp(m_k_x_intra_E_F_1, coords_E_1_a, coords_F_1_a);
        xs[52] = vs[52].v_exp(m_k_x_intra_E_G_1, coords_E_1_a, coords_G_1_a);
        xs[53] = vs[53].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_1_a);
        xs[54] = vs[54].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_2_a);
        xs[55] = vs[55].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_3_a);
        xs[56] = vs[56].v_exp(m_k_x_intra_F_G_1, coords_F_1_a, coords_G_1_a);
        xs[57] = vs[57].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_1_a);
        xs[58] = vs[58].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_2_a);
        xs[59] = vs[59].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_3_a);
        xs[60] = vs[60].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_1_a);
        xs[61] = vs[61].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_2_a);
        xs[62] = vs[62].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_3_a);
        xs[63] = vs[63].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_2_a);
        xs[64] = vs[64].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_3_a);
        xs[65] = vs[65].v_exp(m_k_x_intra_H_H_1, coords_H_2_a, coords_H_3_a);


        sw = 1.0;

        energies[j] = my_poly.eval(xs,coefficients.data());
        energies_sw[j] = energies[j]*sw;

    }
    return energies_sw;

}

//----------------------------------------------------------------------------//

std::vector<double> mbnrg_A1B1C1D3E1F1G1H3_deg2_v1::eval(const double *xyz1, double *grad1 , const size_t n, std::vector<double> *virial) {
    std::vector<double> energies(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(36);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 36*j;


        if (false ) {
             continue;
        }

        std::vector<double> gradients(36,0.0);

        std::copy(mon1, mon1 + 36, xyz.begin() + 0);
        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_C_1_a = xyz.data() + 6;

        const double* coords_D_1_a = xyz.data() + 9;

        const double* coords_D_2_a = xyz.data() + 12;

        const double* coords_D_3_a = xyz.data() + 15;

        const double* coords_E_1_a = xyz.data() + 18;

        const double* coords_F_1_a = xyz.data() + 21;

        const double* coords_G_1_a = xyz.data() + 24;

        const double* coords_H_1_a = xyz.data() + 27;

        const double* coords_H_2_a = xyz.data() + 30;

        const double* coords_H_3_a = xyz.data() + 33;


        double* coords_A_1_a_g = gradients.data() + 0;

        double* coords_B_1_a_g = gradients.data() + 3;

        double* coords_C_1_a_g = gradients.data() + 6;

        double* coords_D_1_a_g = gradients.data() + 9;

        double* coords_D_2_a_g = gradients.data() + 12;

        double* coords_D_3_a_g = gradients.data() + 15;

        double* coords_E_1_a_g = gradients.data() + 18;

        double* coords_F_1_a_g = gradients.data() + 21;

        double* coords_G_1_a_g = gradients.data() + 24;

        double* coords_H_1_a_g = gradients.data() + 27;

        double* coords_H_2_a_g = gradients.data() + 30;

        double* coords_H_3_a_g = gradients.data() + 33;



        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        variable vs[66];

        double xs[66];


        double gxs[66];

        xs[0] = vs[0].v_exp(m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[1] = vs[1].v_exp(m_k_x_intra_A_C_1, coords_A_1_a, coords_C_1_a);
        xs[2] = vs[2].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_1_a);
        xs[3] = vs[3].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_2_a);
        xs[4] = vs[4].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_3_a);
        xs[5] = vs[5].v_exp(m_k_x_intra_A_E_1, coords_A_1_a, coords_E_1_a);
        xs[6] = vs[6].v_exp(m_k_x_intra_A_F_1, coords_A_1_a, coords_F_1_a);
        xs[7] = vs[7].v_exp(m_k_x_intra_A_G_1, coords_A_1_a, coords_G_1_a);
        xs[8] = vs[8].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_1_a);
        xs[9] = vs[9].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_2_a);
        xs[10] = vs[10].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_3_a);
        xs[11] = vs[11].v_exp(m_k_x_intra_B_C_1, coords_B_1_a, coords_C_1_a);
        xs[12] = vs[12].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_1_a);
        xs[13] = vs[13].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_2_a);
        xs[14] = vs[14].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_3_a);
        xs[15] = vs[15].v_exp(m_k_x_intra_B_E_1, coords_B_1_a, coords_E_1_a);
        xs[16] = vs[16].v_exp(m_k_x_intra_B_F_1, coords_B_1_a, coords_F_1_a);
        xs[17] = vs[17].v_exp(m_k_x_intra_B_G_1, coords_B_1_a, coords_G_1_a);
        xs[18] = vs[18].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_1_a);
        xs[19] = vs[19].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_2_a);
        xs[20] = vs[20].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_3_a);
        xs[21] = vs[21].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_1_a);
        xs[22] = vs[22].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_2_a);
        xs[23] = vs[23].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_3_a);
        xs[24] = vs[24].v_exp(m_k_x_intra_C_E_1, coords_C_1_a, coords_E_1_a);
        xs[25] = vs[25].v_exp(m_k_x_intra_C_F_1, coords_C_1_a, coords_F_1_a);
        xs[26] = vs[26].v_exp(m_k_x_intra_C_G_1, coords_C_1_a, coords_G_1_a);
        xs[27] = vs[27].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_1_a);
        xs[28] = vs[28].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_2_a);
        xs[29] = vs[29].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_3_a);
        xs[30] = vs[30].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_2_a);
        xs[31] = vs[31].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_3_a);
        xs[32] = vs[32].v_exp(m_k_x_intra_D_E_1, coords_D_1_a, coords_E_1_a);
        xs[33] = vs[33].v_exp(m_k_x_intra_D_F_1, coords_D_1_a, coords_F_1_a);
        xs[34] = vs[34].v_exp(m_k_x_intra_D_G_1, coords_D_1_a, coords_G_1_a);
        xs[35] = vs[35].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_1_a);
        xs[36] = vs[36].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_2_a);
        xs[37] = vs[37].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_3_a);
        xs[38] = vs[38].v_exp(m_k_x_intra_D_D_1, coords_D_2_a, coords_D_3_a);
        xs[39] = vs[39].v_exp(m_k_x_intra_D_E_1, coords_D_2_a, coords_E_1_a);
        xs[40] = vs[40].v_exp(m_k_x_intra_D_F_1, coords_D_2_a, coords_F_1_a);
        xs[41] = vs[41].v_exp(m_k_x_intra_D_G_1, coords_D_2_a, coords_G_1_a);
        xs[42] = vs[42].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_1_a);
        xs[43] = vs[43].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_2_a);
        xs[44] = vs[44].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_3_a);
        xs[45] = vs[45].v_exp(m_k_x_intra_D_E_1, coords_D_3_a, coords_E_1_a);
        xs[46] = vs[46].v_exp(m_k_x_intra_D_F_1, coords_D_3_a, coords_F_1_a);
        xs[47] = vs[47].v_exp(m_k_x_intra_D_G_1, coords_D_3_a, coords_G_1_a);
        xs[48] = vs[48].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_1_a);
        xs[49] = vs[49].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_2_a);
        xs[50] = vs[50].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_3_a);
        xs[51] = vs[51].v_exp(m_k_x_intra_E_F_1, coords_E_1_a, coords_F_1_a);
        xs[52] = vs[52].v_exp(m_k_x_intra_E_G_1, coords_E_1_a, coords_G_1_a);
        xs[53] = vs[53].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_1_a);
        xs[54] = vs[54].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_2_a);
        xs[55] = vs[55].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_3_a);
        xs[56] = vs[56].v_exp(m_k_x_intra_F_G_1, coords_F_1_a, coords_G_1_a);
        xs[57] = vs[57].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_1_a);
        xs[58] = vs[58].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_2_a);
        xs[59] = vs[59].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_3_a);
        xs[60] = vs[60].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_1_a);
        xs[61] = vs[61].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_2_a);
        xs[62] = vs[62].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_3_a);
        xs[63] = vs[63].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_2_a);
        xs[64] = vs[64].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_3_a);
        xs[65] = vs[65].v_exp(m_k_x_intra_H_H_1, coords_H_2_a, coords_H_3_a);


        sw = 1.0;

        energies[j] = my_poly.eval(xs,coefficients.data(),gxs);
        energies_sw[j] = energies[j]*sw;

        for (size_t i = 0; i < 66; i++) {
            gxs[i] *= sw;
        }

        vs[0].grads(gxs[0], coords_A_1_a_g, coords_B_1_a_g, coords_A_1_a, coords_B_1_a);
        vs[1].grads(gxs[1], coords_A_1_a_g, coords_C_1_a_g, coords_A_1_a, coords_C_1_a);
        vs[2].grads(gxs[2], coords_A_1_a_g, coords_D_1_a_g, coords_A_1_a, coords_D_1_a);
        vs[3].grads(gxs[3], coords_A_1_a_g, coords_D_2_a_g, coords_A_1_a, coords_D_2_a);
        vs[4].grads(gxs[4], coords_A_1_a_g, coords_D_3_a_g, coords_A_1_a, coords_D_3_a);
        vs[5].grads(gxs[5], coords_A_1_a_g, coords_E_1_a_g, coords_A_1_a, coords_E_1_a);
        vs[6].grads(gxs[6], coords_A_1_a_g, coords_F_1_a_g, coords_A_1_a, coords_F_1_a);
        vs[7].grads(gxs[7], coords_A_1_a_g, coords_G_1_a_g, coords_A_1_a, coords_G_1_a);
        vs[8].grads(gxs[8], coords_A_1_a_g, coords_H_1_a_g, coords_A_1_a, coords_H_1_a);
        vs[9].grads(gxs[9], coords_A_1_a_g, coords_H_2_a_g, coords_A_1_a, coords_H_2_a);
        vs[10].grads(gxs[10], coords_A_1_a_g, coords_H_3_a_g, coords_A_1_a, coords_H_3_a);
        vs[11].grads(gxs[11], coords_B_1_a_g, coords_C_1_a_g, coords_B_1_a, coords_C_1_a);
        vs[12].grads(gxs[12], coords_B_1_a_g, coords_D_1_a_g, coords_B_1_a, coords_D_1_a);
        vs[13].grads(gxs[13], coords_B_1_a_g, coords_D_2_a_g, coords_B_1_a, coords_D_2_a);
        vs[14].grads(gxs[14], coords_B_1_a_g, coords_D_3_a_g, coords_B_1_a, coords_D_3_a);
        vs[15].grads(gxs[15], coords_B_1_a_g, coords_E_1_a_g, coords_B_1_a, coords_E_1_a);
        vs[16].grads(gxs[16], coords_B_1_a_g, coords_F_1_a_g, coords_B_1_a, coords_F_1_a);
        vs[17].grads(gxs[17], coords_B_1_a_g, coords_G_1_a_g, coords_B_1_a, coords_G_1_a);
        vs[18].grads(gxs[18], coords_B_1_a_g, coords_H_1_a_g, coords_B_1_a, coords_H_1_a);
        vs[19].grads(gxs[19], coords_B_1_a_g, coords_H_2_a_g, coords_B_1_a, coords_H_2_a);
        vs[20].grads(gxs[20], coords_B_1_a_g, coords_H_3_a_g, coords_B_1_a, coords_H_3_a);
        vs[21].grads(gxs[21], coords_C_1_a_g, coords_D_1_a_g, coords_C_1_a, coords_D_1_a);
        vs[22].grads(gxs[22], coords_C_1_a_g, coords_D_2_a_g, coords_C_1_a, coords_D_2_a);
        vs[23].grads(gxs[23], coords_C_1_a_g, coords_D_3_a_g, coords_C_1_a, coords_D_3_a);
        vs[24].grads(gxs[24], coords_C_1_a_g, coords_E_1_a_g, coords_C_1_a, coords_E_1_a);
        vs[25].grads(gxs[25], coords_C_1_a_g, coords_F_1_a_g, coords_C_1_a, coords_F_1_a);
        vs[26].grads(gxs[26], coords_C_1_a_g, coords_G_1_a_g, coords_C_1_a, coords_G_1_a);
        vs[27].grads(gxs[27], coords_C_1_a_g, coords_H_1_a_g, coords_C_1_a, coords_H_1_a);
        vs[28].grads(gxs[28], coords_C_1_a_g, coords_H_2_a_g, coords_C_1_a, coords_H_2_a);
        vs[29].grads(gxs[29], coords_C_1_a_g, coords_H_3_a_g, coords_C_1_a, coords_H_3_a);
        vs[30].grads(gxs[30], coords_D_1_a_g, coords_D_2_a_g, coords_D_1_a, coords_D_2_a);
        vs[31].grads(gxs[31], coords_D_1_a_g, coords_D_3_a_g, coords_D_1_a, coords_D_3_a);
        vs[32].grads(gxs[32], coords_D_1_a_g, coords_E_1_a_g, coords_D_1_a, coords_E_1_a);
        vs[33].grads(gxs[33], coords_D_1_a_g, coords_F_1_a_g, coords_D_1_a, coords_F_1_a);
        vs[34].grads(gxs[34], coords_D_1_a_g, coords_G_1_a_g, coords_D_1_a, coords_G_1_a);
        vs[35].grads(gxs[35], coords_D_1_a_g, coords_H_1_a_g, coords_D_1_a, coords_H_1_a);
        vs[36].grads(gxs[36], coords_D_1_a_g, coords_H_2_a_g, coords_D_1_a, coords_H_2_a);
        vs[37].grads(gxs[37], coords_D_1_a_g, coords_H_3_a_g, coords_D_1_a, coords_H_3_a);
        vs[38].grads(gxs[38], coords_D_2_a_g, coords_D_3_a_g, coords_D_2_a, coords_D_3_a);
        vs[39].grads(gxs[39], coords_D_2_a_g, coords_E_1_a_g, coords_D_2_a, coords_E_1_a);
        vs[40].grads(gxs[40], coords_D_2_a_g, coords_F_1_a_g, coords_D_2_a, coords_F_1_a);
        vs[41].grads(gxs[41], coords_D_2_a_g, coords_G_1_a_g, coords_D_2_a, coords_G_1_a);
        vs[42].grads(gxs[42], coords_D_2_a_g, coords_H_1_a_g, coords_D_2_a, coords_H_1_a);
        vs[43].grads(gxs[43], coords_D_2_a_g, coords_H_2_a_g, coords_D_2_a, coords_H_2_a);
        vs[44].grads(gxs[44], coords_D_2_a_g, coords_H_3_a_g, coords_D_2_a, coords_H_3_a);
        vs[45].grads(gxs[45], coords_D_3_a_g, coords_E_1_a_g, coords_D_3_a, coords_E_1_a);
        vs[46].grads(gxs[46], coords_D_3_a_g, coords_F_1_a_g, coords_D_3_a, coords_F_1_a);
        vs[47].grads(gxs[47], coords_D_3_a_g, coords_G_1_a_g, coords_D_3_a, coords_G_1_a);
        vs[48].grads(gxs[48], coords_D_3_a_g, coords_H_1_a_g, coords_D_3_a, coords_H_1_a);
        vs[49].grads(gxs[49], coords_D_3_a_g, coords_H_2_a_g, coords_D_3_a, coords_H_2_a);
        vs[50].grads(gxs[50], coords_D_3_a_g, coords_H_3_a_g, coords_D_3_a, coords_H_3_a);
        vs[51].grads(gxs[51], coords_E_1_a_g, coords_F_1_a_g, coords_E_1_a, coords_F_1_a);
        vs[52].grads(gxs[52], coords_E_1_a_g, coords_G_1_a_g, coords_E_1_a, coords_G_1_a);
        vs[53].grads(gxs[53], coords_E_1_a_g, coords_H_1_a_g, coords_E_1_a, coords_H_1_a);
        vs[54].grads(gxs[54], coords_E_1_a_g, coords_H_2_a_g, coords_E_1_a, coords_H_2_a);
        vs[55].grads(gxs[55], coords_E_1_a_g, coords_H_3_a_g, coords_E_1_a, coords_H_3_a);
        vs[56].grads(gxs[56], coords_F_1_a_g, coords_G_1_a_g, coords_F_1_a, coords_G_1_a);
        vs[57].grads(gxs[57], coords_F_1_a_g, coords_H_1_a_g, coords_F_1_a, coords_H_1_a);
        vs[58].grads(gxs[58], coords_F_1_a_g, coords_H_2_a_g, coords_F_1_a, coords_H_2_a);
        vs[59].grads(gxs[59], coords_F_1_a_g, coords_H_3_a_g, coords_F_1_a, coords_H_3_a);
        vs[60].grads(gxs[60], coords_G_1_a_g, coords_H_1_a_g, coords_G_1_a, coords_H_1_a);
        vs[61].grads(gxs[61], coords_G_1_a_g, coords_H_2_a_g, coords_G_1_a, coords_H_2_a);
        vs[62].grads(gxs[62], coords_G_1_a_g, coords_H_3_a_g, coords_G_1_a, coords_H_3_a);
        vs[63].grads(gxs[63], coords_H_1_a_g, coords_H_2_a_g, coords_H_1_a, coords_H_2_a);
        vs[64].grads(gxs[64], coords_H_1_a_g, coords_H_3_a_g, coords_H_1_a, coords_H_3_a);
        vs[65].grads(gxs[65], coords_H_2_a_g, coords_H_3_a_g, coords_H_2_a, coords_H_3_a);


        for (size_t i = 0; i < 3; i++) {
            gradients[0 + i] += 0.0 ;
        }


        for (size_t i = 0; i < 36; i++) {
            grad1[i + j*36] += gradients[0 + i];
        }

        
        if (virial != 0) {
        
            (*virial)[0] += -coords_A_1_a[0]*coords_A_1_a_g[0]
                        -coords_B_1_a[0]*coords_B_1_a_g[0]
                        -coords_C_1_a[0]*coords_C_1_a_g[0]
                        -coords_D_1_a[0]*coords_D_1_a_g[0]
                        -coords_D_2_a[0]*coords_D_2_a_g[0]
                        -coords_D_3_a[0]*coords_D_3_a_g[0]
                        -coords_E_1_a[0]*coords_E_1_a_g[0]
                        -coords_F_1_a[0]*coords_F_1_a_g[0]
                        -coords_G_1_a[0]*coords_G_1_a_g[0]
                        -coords_H_1_a[0]*coords_H_1_a_g[0]
                        -coords_H_2_a[0]*coords_H_2_a_g[0]
                        -coords_H_3_a[0]*coords_H_3_a_g[0];

        
            (*virial)[1] += -coords_A_1_a[0]*coords_A_1_a_g[1]
                        -coords_B_1_a[0]*coords_B_1_a_g[1]
                        -coords_C_1_a[0]*coords_C_1_a_g[1]
                        -coords_D_1_a[0]*coords_D_1_a_g[1]
                        -coords_D_2_a[0]*coords_D_2_a_g[1]
                        -coords_D_3_a[0]*coords_D_3_a_g[1]
                        -coords_E_1_a[0]*coords_E_1_a_g[1]
                        -coords_F_1_a[0]*coords_F_1_a_g[1]
                        -coords_G_1_a[0]*coords_G_1_a_g[1]
                        -coords_H_1_a[0]*coords_H_1_a_g[1]
                        -coords_H_2_a[0]*coords_H_2_a_g[1]
                        -coords_H_3_a[0]*coords_H_3_a_g[1];

        
            (*virial)[2] += -coords_A_1_a[0]*coords_A_1_a_g[2]
                        -coords_B_1_a[0]*coords_B_1_a_g[2]
                        -coords_C_1_a[0]*coords_C_1_a_g[2]
                        -coords_D_1_a[0]*coords_D_1_a_g[2]
                        -coords_D_2_a[0]*coords_D_2_a_g[2]
                        -coords_D_3_a[0]*coords_D_3_a_g[2]
                        -coords_E_1_a[0]*coords_E_1_a_g[2]
                        -coords_F_1_a[0]*coords_F_1_a_g[2]
                        -coords_G_1_a[0]*coords_G_1_a_g[2]
                        -coords_H_1_a[0]*coords_H_1_a_g[2]
                        -coords_H_2_a[0]*coords_H_2_a_g[2]
                        -coords_H_3_a[0]*coords_H_3_a_g[2];

        
            (*virial)[4] += -coords_A_1_a[1]*coords_A_1_a_g[1]
                        -coords_B_1_a[1]*coords_B_1_a_g[1]
                        -coords_C_1_a[1]*coords_C_1_a_g[1]
                        -coords_D_1_a[1]*coords_D_1_a_g[1]
                        -coords_D_2_a[1]*coords_D_2_a_g[1]
                        -coords_D_3_a[1]*coords_D_3_a_g[1]
                        -coords_E_1_a[1]*coords_E_1_a_g[1]
                        -coords_F_1_a[1]*coords_F_1_a_g[1]
                        -coords_G_1_a[1]*coords_G_1_a_g[1]
                        -coords_H_1_a[1]*coords_H_1_a_g[1]
                        -coords_H_2_a[1]*coords_H_2_a_g[1]
                        -coords_H_3_a[1]*coords_H_3_a_g[1];

        
            (*virial)[5] += -coords_A_1_a[1]*coords_A_1_a_g[2]
                        -coords_B_1_a[1]*coords_B_1_a_g[2]
                        -coords_C_1_a[1]*coords_C_1_a_g[2]
                        -coords_D_1_a[1]*coords_D_1_a_g[2]
                        -coords_D_2_a[1]*coords_D_2_a_g[2]
                        -coords_D_3_a[1]*coords_D_3_a_g[2]
                        -coords_E_1_a[1]*coords_E_1_a_g[2]
                        -coords_F_1_a[1]*coords_F_1_a_g[2]
                        -coords_G_1_a[1]*coords_G_1_a_g[2]
                        -coords_H_1_a[1]*coords_H_1_a_g[2]
                        -coords_H_2_a[1]*coords_H_2_a_g[2]
                        -coords_H_3_a[1]*coords_H_3_a_g[2];

        
            (*virial)[8] += -coords_A_1_a[2]*coords_A_1_a_g[2]
                        -coords_B_1_a[2]*coords_B_1_a_g[2]
                        -coords_C_1_a[2]*coords_C_1_a_g[2]
                        -coords_D_1_a[2]*coords_D_1_a_g[2]
                        -coords_D_2_a[2]*coords_D_2_a_g[2]
                        -coords_D_3_a[2]*coords_D_3_a_g[2]
                        -coords_E_1_a[2]*coords_E_1_a_g[2]
                        -coords_F_1_a[2]*coords_F_1_a_g[2]
                        -coords_G_1_a[2]*coords_G_1_a_g[2]
                        -coords_H_1_a[2]*coords_H_1_a_g[2]
                        -coords_H_2_a[2]*coords_H_2_a_g[2]
                        -coords_H_3_a[2]*coords_H_3_a_g[2];

            (*virial)[3] = (*virial)[1];
            (*virial)[6] = (*virial)[2];
            (*virial)[7] = (*virial)[5];


        }


    }
    return energies_sw;

}

//----------------------------------------------------------------------------//
} // namespace mbnrg_A1B1C1D3E1F1G1H3_deg2
