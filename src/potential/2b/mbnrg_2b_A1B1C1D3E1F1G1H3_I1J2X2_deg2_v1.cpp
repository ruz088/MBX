#include "mbnrg_2b_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1.h"
#include <algorithm>
#include <vector>

////////////////////////////////////////////////////////////////////////////////

namespace mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2 {

mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1::mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1(const std::string mon1, const std::string mon2) {

    // =====>> BEGIN SECTION CONSTRUCTOR <<=====
    // =>> PASTE RIGHT BELOW THIS LINE <==

    if (mon1 == "nma" and mon2 == "h2o") {
        coefficients = std::vector<double> {
            -5.630502497287541e+00, // 0
             1.263979470335463e+01, // 1
            -2.004183913149239e+02, // 2
             1.994541905181572e+03, // 3
            -6.019296206084207e+02, // 4
            -5.327486529123096e+02, // 5
             1.858462868674793e+01, // 6
             8.280387921500303e+00, // 7
            -3.622194538500611e+01, // 8
             1.836679318252632e+00, // 9
             4.207443095565750e+02, // 10
            -1.764722175902744e+03, // 11
             1.684678630643058e+02, // 12
             5.398681963912769e+02, // 13
             2.374924431309705e+02, // 14
            -1.279997794121880e+02, // 15
             3.641944847202176e+02, // 16
            -9.884024877637658e+01, // 17
            -2.453698962415496e+02, // 18
            -3.954277996227074e+02, // 19
            -5.897298352783597e+01, // 20
            -3.281818514060545e+02, // 21
            -8.513492986606910e+02, // 22
            -1.419277428023631e+01, // 23
             5.826334158573941e-01, // 24
            -7.542288782325743e+02, // 25
             4.276879586131625e-02, // 26
             2.605431601539020e+02, // 27
            -1.623089903352149e+01, // 28
             5.640030786343923e+01, // 29
             1.348271889171215e+00, // 30
            -7.232277160846844e+01, // 31
            -1.018502522329103e-01, // 32
            -9.068113445443123e+00, // 33
            -1.613298770103637e+02, // 34
            -9.128253575292810e+02, // 35
             1.136929854304990e+02, // 36
            -3.185934306971034e+02, // 37
            -4.393792912356862e-02, // 38
             1.823400816000888e+02, // 39
            -4.584290511102368e+00, // 40
             1.586399850479529e+02, // 41
             3.313933720379874e+02, // 42
            -1.944914510291006e+01, // 43
            -3.334590246620714e+02, // 44
            -4.517487388461083e+00, // 45
             1.713067562293695e+02, // 46
            -4.636997743630871e+01, // 47
             6.493889375418692e+02, // 48
             4.722387717262138e+01, // 49
            -2.080259242105286e+02, // 50
             5.693489240122376e+02, // 51
             1.628936724371099e+01, // 52
            -7.846891405556448e+01, // 53
             1.081680531915995e+02, // 54
            -3.036609158661042e+02, // 55
            -1.742029081462648e-01, // 56
             4.582602242318767e+01, // 57
            -4.995809031761395e+02, // 58
             4.236879193217949e-02, // 59
             1.217385092520496e+02, // 60
             3.425512963619023e+00, // 61
            -1.003855117275584e+02, // 62
             2.124197788771725e+01, // 63
            -2.589474062493348e+01, // 64
             8.475536633052045e+00, // 65
            -1.830834724835372e+02, // 66
             1.634410595637469e+01, // 67
             1.470274216401885e-01, // 68
             9.893112553464404e+00, // 69
             8.522392229988133e-01, // 70
             6.588886444126440e+01, // 71
             3.150545129296988e+01, // 72
            -9.634706955543363e+00, // 73
             7.195777794165122e+01, // 74
             4.173545108583011e-03, // 75
            -3.656830906848487e+00, // 76
             2.307887701642877e+02, // 77
            -1.427040608993600e+03, // 78
             2.152264944981040e+02, // 79
            -1.869200250412148e+02, // 80
             6.753584194902843e+02, // 81
            -6.288448224462541e+01, // 82
            -7.579818350742822e+01, // 83
            -1.420687690419505e+01, // 84
             1.712006593125262e+02, // 85
            -3.067425448123238e+01, // 86
            -1.752895804216763e-04, // 87
             3.417714531647125e+01, // 88
             4.020929863529214e-03, // 89
            -3.654021596058609e-02, // 90
             6.574480015753111e-02, // 91
            -6.656279828022699e+01, // 92
             2.501090474438056e-02, // 93
             4.700692610689989e+02, // 94
            -1.341904225934213e+00, // 95
             2.224602893874057e+00, // 96
             5.989277566206811e+01, // 97
             3.235932818281090e+00, // 98
            -1.768787963064335e+02, // 99
            -9.614836452501647e-02, // 100
             1.092340936570310e+02, // 101
            -1.498018182591673e+02, // 102
            -8.202090838565018e+00, // 103
             1.071926781852656e+01, // 104
            -4.559672699699009e-01, // 105
            -9.401585022449309e+00, // 106
            -5.389153882754593e+01, // 107
            -2.419009851816478e+00, // 108
            -4.512712742053781e+00, // 109
            -1.342061026465506e+02, // 110
             4.195580885993540e+01, // 111
            -3.639956995431668e+00, // 112
             3.795763410602044e+00, // 113
             2.740540933456575e-02, // 114
            -4.011853245335542e-01, // 115
            -4.392673272100023e+02, // 116
             1.531255522599146e+02, // 117
             2.371014688175902e+02, // 118
            -1.604327401629495e+02, // 119
            -1.270065135873079e+01, // 120
            -1.171205911141821e+02, // 121
             3.992469078318653e+02, // 122
             2.827026478950914e+01, // 123
             2.145728784006774e+02, // 124
            -7.575325317035750e+01, // 125
             6.675744455215363e+02, // 126
            -8.354590335951966e+02, // 127
             4.585459653721169e+02, // 128
             7.902824885294120e+00, // 129
            -1.549167612324399e+03, // 130
             9.527067599090149e+00, // 131
             1.917956194679214e+01, // 132
             3.756604944211248e+02, // 133
             3.593487298489507e+01, // 134
            -6.875057908846148e-01, // 135
            -5.292911283864778e+02, // 136
            -1.772100645076778e+02, // 137
            -1.819776169244287e+01, // 138
            -3.428511533171994e+03, // 139
             2.232192581360285e+02, // 140
            -6.741515508426594e-01, // 141
             1.928748279636570e+02, // 142
             1.891064805205708e+01, // 143
             3.274647573342673e+02, // 144
             3.089016220451291e+00, // 145
             1.718819169508696e+02, // 146
            -1.295121579864601e+01, // 147
            -1.054412117078050e+01, // 148
            -1.185487176873323e+01, // 149
            -3.891058549200971e+00, // 150
             1.592381296351076e+02, // 151
             1.160372014158117e+02, // 152
             1.414587929464469e+02, // 153
            -1.488059212406860e+01, // 154
            -2.672399244593683e+00, // 155
            -3.548703023754876e+02, // 156
             6.237566099051563e+00, // 157
             1.900992597788378e+01, // 158
             1.442530173197177e+02, // 159
            -1.175802749415446e+01, // 160
            -3.659607726493347e+00, // 161
            -2.101819669509246e+02, // 162
            -7.450602054498837e+00, // 163
             4.307974838204280e-03, // 164
            -7.829648911436665e+01, // 165
             3.290227998690287e+02, // 166
             5.414217922859829e+01, // 167
            -5.091870047911504e+00, // 168
            -2.777530278421109e+00, // 169
            -8.850487356021434e+01, // 170
            -7.731277493152155e+01, // 171
             1.356394539087080e+03, // 172
             6.160352556876300e-01, // 173
             1.645070907389821e+02, // 174
            -1.663730216616331e+02, // 175
            -1.598461421453093e+02, // 176
            -3.318202213686462e+01, // 177
            -5.933608727310927e+00, // 178
             2.477517360482277e+02, // 179
            -9.851970849559054e+02, // 180
            -1.749866307020626e-02, // 181
             6.792399354201734e+01, // 182
            -1.608011742371966e+02, // 183
             7.259249429631183e-02, // 184
            -1.304951864845006e+00, // 185
            -3.747010420439752e+00, // 186
             4.299144495302435e+00, // 187
             1.292452798549948e+01, // 188
            -5.083263620221127e+02, // 189
            -6.379831067615660e-01, // 190
            -2.157433289821735e+01, // 191
            -3.140593251463615e+02, // 192
            -1.626724400765647e+00, // 193
            -4.545874993252682e+01, // 194
            -9.148964974127441e+00, // 195
            -6.758112948209439e-01, // 196
             7.231719073563187e+01, // 197
            -7.619392849424738e+00, // 198
             2.182634438317875e+01, // 199
            -1.121543774539876e+01, // 200
             6.177855094577496e+01, // 201
            -5.597348280444481e+01, // 202
            -4.930947786706504e+01, // 203
            -3.222690935735171e+02, // 204
            -1.841224817808546e+02, // 205
            -9.632080018231302e-01, // 206
            -9.667538519216895e+01, // 207
             1.970518080351898e+02, // 208
             8.782737713706781e+02, // 209
             4.736631236289394e+01, // 210
             3.620630733222424e-02, // 211
            -1.772889350359436e+01, // 212
             1.782698202637812e+00, // 213
             3.282266966430321e+02, // 214
             4.152807874464704e+02, // 215
             2.163246492723277e-02, // 216
             4.576312252745984e+01, // 217
             1.025083408800855e+02, // 218
             3.441097104282737e-02, // 219
            -5.039468740106098e+01, // 220
            -2.433058432347161e+02, // 221
            -9.883525227996286e+00, // 222
             4.412843314781647e+01, // 223
            -1.972360621683830e+01, // 224
             1.338562757672761e+02, // 225
            -3.057251380902973e+01, // 226
             6.673984388225852e+00, // 227
            -5.093802808527130e+02, // 228
            -7.446986972497075e+01, // 229
            -9.073696644100384e+02, // 230
            -1.940898818252481e+02, // 231
             3.911689146111646e-01, // 232
             1.549246966462369e+00, // 233
            -1.326053497361950e-01, // 234
             2.583768749334132e-02, // 235
             3.356980910356388e+01, // 236
             2.871240284434557e+00, // 237
             6.764705915716366e-01, // 238
            -5.437660554750823e+01, // 239
             3.306444555792530e+02, // 240
             7.520585061869684e+02, // 241
            -1.105228148750189e+02, // 242
             8.790246639742456e+00, // 243
             1.921521024076256e+03, // 244
            -2.909451777188007e+02, // 245
            -4.985532653010744e+00, // 246
            -1.613274512717860e+02, // 247
             1.492798411222212e+01, // 248
            -1.990232934011645e+02, // 249
            -3.136926806123057e+00, // 250
            -2.925455085325864e+00, // 251
             1.032954181620658e+00, // 252
             2.123571057556201e+01, // 253
            -1.860117703234161e-05, // 254
             1.205761019690233e+03, // 255
             1.395275552757553e+03, // 256
            -1.993946571449413e+00, // 257
            -1.626083707157102e+02, // 258
            -7.824916942417391e+01, // 259
            -5.896380110975186e+02, // 260
             3.953934758171997e+01, // 261
            -1.589410368702202e+03, // 262
            -8.134947004600693e+02, // 263
            -7.251701837143688e+01, // 264
            -2.152883412510933e+02, // 265
            -5.736044198308080e+01, // 266
            -3.276859820458595e-01, // 267
             5.049998300025424e+00, // 268
             1.435694849343608e+01, // 269
            -6.620555782738004e+02, // 270
            -2.820687389141919e+02, // 271
            -1.004722383713379e+02, // 272
             3.213390524255606e+00, // 273
            -8.436735666440269e+01, // 274
             2.663760370447225e+01, // 275
            -1.533712159771902e+03, // 276
             8.850541795478041e+00, // 277
            -2.180106710728020e+01, // 278
            -3.068504866410281e+01, // 279
            -1.965106909936580e+02, // 280
             4.463799412271715e+01, // 281
            -5.531389926125656e+01, // 282
             6.700495389495435e+01, // 283
            -4.978889931354890e+02, // 284
            -1.174795540169250e+02, // 285
             1.054734348400156e+01, // 286
            -1.646663070322598e+00, // 287
             6.041954540848607e+02, // 288
            -1.527112649574314e-01, // 289
             1.675219827585325e+01, // 290
            -7.204145774884395e-02, // 291
            -2.076323400484952e+01, // 292
             4.711353127277921e+00, // 293
             7.258994739396847e+01, // 294
             1.106239565422500e+00, // 295
            -2.108251398520751e+02, // 296
             2.366778422438875e+01, // 297
            -7.656768416615627e+02, // 298
             1.545777414431821e+02, // 299
             3.084937891306359e+01, // 300
             1.732072279697624e+02, // 301
             1.628035713080405e+01, // 302
            -1.627733788074995e+02, // 303
            -3.066050783456795e+02, // 304
            -2.913633080508452e-03, // 305
             3.226173921176569e+01, // 306
            -1.109628417127717e+01, // 307
             5.429723491388384e+00, // 308
            -5.351892009276659e+01, // 309
             2.409091953157447e+01, // 310
            -9.743252696400594e+01, // 311
             7.804256304626667e+00, // 312
            -9.216694911246574e+00, // 313
            -2.190570874944686e+02, // 314
            -4.336075677035922e+01, // 315
            -1.320673879684558e+00, // 316
            -1.331848374839947e+00, // 317
            -1.968655208838936e+02, // 318
            -1.506515156055160e+00, // 319
            -3.143974896814993e+02, // 320
             3.915171811914850e+01, // 321
             3.319874397605498e+01, // 322
            -9.393456072819096e+01, // 323
            -1.124134704947385e-03, // 324
            -2.060901809421605e+02, // 325
             1.270352843815213e+00, // 326
             4.648678037944196e+01, // 327
            -9.848650056860123e+01, // 328
            -1.093832619226379e+02, // 329
            -1.495248058034781e+00, // 330
            -1.536065151771170e-01, // 331
            -2.749025961242730e-01, // 332
            -2.680420312249541e+02, // 333
            -3.269971969888759e-01, // 334
             3.610173665962770e+01, // 335
             1.505304844434708e+03, // 336
             2.444390491478720e+01, // 337
            -2.619190443147015e+01, // 338
             3.936800378794362e+00, // 339
            -2.891818916402546e+02, // 340
            -3.995274177532365e+01, // 341
            -1.294572587382640e+03, // 342
            -1.722582238153176e+01, // 343
             1.963353442410119e+02, // 344
             1.567915826157889e+02, // 345
             2.187698827278182e+00, // 346
            -1.923799043543172e-01, // 347
            -8.206534043625874e+01, // 348
             2.109666635874214e+01, // 349
            -1.256149591466558e+02, // 350
            -1.932034994191332e+02, // 351
            -2.109930188813719e+02, // 352
            -4.230986098403065e+01, // 353
            -3.315576731055127e+01, // 354
             2.578331625466986e+00, // 355
             1.284464396010919e-02, // 356
            -1.535851785280487e+03, // 357
             2.444740181219398e+00, // 358
             2.687905262925119e+01, // 359
             6.253133405656775e+01, // 360
             1.714276947793996e+02, // 361
            -3.485146921780578e+01, // 362
             7.695660788753130e-01, // 363
            -7.772460465887800e+00, // 364
            -5.921208787666945e+02, // 365
            -1.659237960759532e+00, // 366
             1.549093391632597e+02, // 367
            -1.499592085400900e-01, // 368
            -4.951238627196026e+01, // 369
             6.413610039893567e+01, // 370
            -4.399941323709698e+01, // 371
             4.763042402415974e+02, // 372
             5.302598602689272e+01, // 373
             2.704476426366342e+02, // 374
            -1.824700682207212e+01, // 375
            -9.965845299031372e+01, // 376
             2.614406449052713e+00, // 377
             2.224453523894860e+01, // 378
            -3.052701423298867e+01, // 379
            -1.564863069174251e+02, // 380
             2.837108573213501e+02, // 381
             4.928437998198252e+02, // 382
             1.973344350924779e+02, // 383
            -5.340247861249123e+00, // 384
             2.206781674205374e+02, // 385
             1.126753008621610e+02, // 386
             6.204586840111769e+00, // 387
            -1.434107204989278e+01, // 388
            -2.258624802830438e+01, // 389
             2.172640189006263e+02, // 390
            -3.730693254774645e+02, // 391
             4.734416663272210e+02, // 392
             4.145954985214021e+01, // 393
            -7.510945335771633e+00, // 394
             1.286876910103025e+01, // 395
            -3.611818890584457e+02, // 396
            -3.706088996250614e+02, // 397
            -7.385816373275921e+01, // 398
            -5.368577151178069e+02, // 399
            -1.479698600536587e+02, // 400
            -5.186947819265533e+01, // 401
             2.586249224954411e+02, // 402
             1.825083841419910e+01, // 403
            -2.009278905390447e+01, // 404
             1.001214031611410e+02, // 405
            -6.101523570469461e-02, // 406
            -2.088606772407781e+02, // 407
             2.748431660427796e+02, // 408
             5.421842004321257e+00, // 409
             1.169392131400559e+02, // 410
             2.500673860138121e+02, // 411
            -6.117862969665186e+02, // 412
            -8.398240293481784e+00, // 413
            -9.465559915938194e+02, // 414
             1.218108168043839e+02, // 415
             3.360929312240445e+02, // 416
             1.494227819171357e+01, // 417
            -9.984687819183435e+01, // 418
            -1.074886670442944e+03, // 419
            -2.666078138486483e+02, // 420
            -1.229197489026509e+02, // 421
            -1.001789672410354e+02, // 422
             1.153429900555987e+02, // 423
             3.637555868137493e+01, // 424
            -9.979854713721154e-01, // 425
             5.836167866669916e+01, // 426
             1.903183063014500e+00, // 427
             2.241192091674427e+02, // 428
             8.377369142810811e+01, // 429
            -2.300101521998400e+02, // 430
            -1.460822671608443e+00, // 431
            -2.051022087845540e-01, // 432
             5.546448383757664e+00, // 433
             1.901639922933739e+00, // 434
            -5.155870507445683e-04, // 435
            -1.201002416989306e+00, // 436
            -2.250303773506606e+00, // 437
            -2.815483079118627e+00, // 438
            -5.740713523337760e+01, // 439
             1.875939890563437e+02, // 440
             9.504103209831744e+01, // 441
             3.602093265648833e+01, // 442
             3.718486015751960e+00, // 443
             1.265916900702786e+01, // 444
            -1.861921782084863e+01, // 445
            -3.668539443915470e+02, // 446
             2.207822944897610e+01, // 447
             7.589875703592141e+00, // 448
             2.065300673170041e+01, // 449
             9.571536601134265e+01, // 450
            -2.944821374924755e+02, // 451
            -4.134004558808261e+02, // 452
            -6.826453568576301e+00, // 453
             1.719466627719769e-01, // 454
             5.344436038894379e+01, // 455
             2.446510107753972e+01, // 456
             3.714776097577266e+01, // 457
            -3.393304802121795e+02, // 458
             1.995351264865115e+02, // 459
            -3.368679997871427e-01, // 460
             1.235277657892984e+00, // 461
            -1.675620498014576e+02, // 462
            -2.734370433277835e+01, // 463
             6.550299197364061e-04, // 464
            -6.227843035541056e+00, // 465
            -1.213540949114530e+02, // 466
             3.548765363104455e+01, // 467
             4.055480299440061e+01, // 468
             3.784240650533861e+01, // 469
             7.162088605797423e+01, // 470
             6.861809859656694e+01, // 471
             5.875036042220718e-01, // 472
             1.002194344086104e+00, // 473
             4.096393565734996e+01, // 474
             4.627764129746184e-01, // 475
            -4.114013073071653e+02, // 476
             1.728948512624122e+02, // 477
             2.448624382558800e+02, // 478
            -1.197104858288553e+02, // 479
            -5.972322318571219e-01, // 480
             3.633738520356899e+02, // 481
            -3.177221713501114e+01, // 482
            -2.976084047773579e+01, // 483
            -6.694787848554587e+01, // 484
            -1.147416979221355e+02, // 485
            -3.635565659075227e+00, // 486
             5.769349513688226e+01, // 487
             2.423342803280551e+00, // 488
            -9.634206321962368e+01, // 489
             3.666806860610340e+01, // 490
             2.313628959158889e+02, // 491
             1.287483747066826e+01, // 492
             4.658076911150641e+02, // 493
             1.002358164944278e+00, // 494
             5.886359639101965e+01, // 495
            -9.084624495646249e+02, // 496
             1.031886562810909e+02, // 497
            -3.777131969177442e+01, // 498
            -3.684972721973552e+02, // 499
             4.002507112872326e+01, // 500
            -1.473176458994053e+01, // 501
             7.687649297106625e+02, // 502
            -2.245652022891657e+01, // 503
            -1.057547719186835e+01, // 504
             1.513590470096123e+02, // 505
            -7.417854762142050e+02, // 506
            -4.064493619550217e+02, // 507
             1.643472048250445e+02, // 508
             6.491035681059745e+01, // 509
             1.622027550772809e+01, // 510
            -2.465732031644773e+02, // 511
             5.736840995028777e-01, // 512
            -1.347709412918348e+02, // 513
             5.184983080884992e+02, // 514
            -3.956914554514872e+00, // 515
            -7.702600086620407e+01, // 516
             1.344078563817590e+02, // 517
             1.752428898075425e-01, // 518
            -8.207778918379002e+01, // 519
             3.946003192293319e+02, // 520
            -2.832793835644861e+01, // 521
            -9.980475959765252e+00, // 522
            -9.177608315347611e-03, // 523
            -1.000190272044682e+03, // 524
            -2.859687088116940e+01, // 525
            -1.193414795262801e+01, // 526
             7.192242275029841e+02, // 527
            -1.626248192553236e+02, // 528
            -2.709557827805027e+01, // 529
             9.559459931984193e+02, // 530
             4.031236777783081e+02, // 531
            -1.594778662254535e+02, // 532
             1.775211581289511e+00, // 533
            -1.111592375149682e+02, // 534
             3.746440510478474e+01, // 535
            -1.818352836388900e+02, // 536
            -5.977881741728434e+01, // 537
            -1.234295661436319e+02, // 538
             2.368169097577564e+02, // 539
            -2.881585534263661e-03, // 540
            -9.715553482348724e+00, // 541
            -1.858890486629474e+02, // 542
            -2.190693430286933e+02, // 543
             4.070879817334998e+01, // 544
            -5.344116442283265e+00, // 545
            -6.345673233151922e+02, // 546
            -8.815648296145208e+02, // 547
            -9.632354675494000e+01, // 548
            -8.912080964965233e-01, // 549
            -1.387405529365683e+01, // 550
             6.241551663893280e+01, // 551
            -3.932978558986318e+01, // 552
             7.411283996284033e+01, // 553
            -8.287431208707868e+01, // 554
             3.576510441659126e+02, // 555
            -1.150513745033254e+02, // 556
             1.052878968797078e+02, // 557
            -9.553164387254648e+01, // 558
            -8.434398500868313e+01, // 559
            -9.513468759545783e+01, // 560
             2.979416258127808e+00, // 561
            -4.920361622697755e+00, // 562
             5.866182866425946e+00, // 563
             1.360685775143642e+02, // 564
            -1.517632553682867e+02, // 565
             4.427995208245193e-01, // 566
             1.005479863668207e+01, // 567
            -6.731188218526549e+02, // 568
             1.178712518708565e+02, // 569
             1.232372554167269e+02, // 570
            -1.635425762478616e+02, // 571
             6.087850239805089e+01, // 572
            -1.534115897907832e+02, // 573
            -2.010460977055182e+00, // 574
             2.765410775692171e+00, // 575
             2.638699073267118e+00, // 576
             5.959846003713070e+00, // 577
            -4.817795891158691e-01, // 578
            -6.417746571412868e-02, // 579
             1.066784344533023e+00, // 580
            -1.259009936835017e+02, // 581
             5.324719812508353e+02, // 582
            -1.049831258334052e+03, // 583
             5.301828484596897e+01, // 584
             1.454423001772941e+02, // 585
             6.594219142532882e+00, // 586
             2.221768775972765e+02, // 587
             4.097346628488790e+02, // 588
            -3.967755979104845e+01, // 589
            -2.179948603901117e+01, // 590
             7.380631766464086e+02, // 591
            -4.819325841073433e+01, // 592
            -4.427797239157228e+02, // 593
             2.641521338715363e+01, // 594
             2.560260245780807e-01, // 595
            -2.594571830434521e+01, // 596
            -4.939256722956536e+02, // 597
            -9.822030585409655e+02, // 598
            -1.627436256996909e+01, // 599
            -3.763334762296203e+00, // 600
            -2.645957186706905e+01, // 601
             3.730604446084362e+00, // 602
            -2.212718802693252e-02, // 603
             3.990453951746705e+02, // 604
             1.679002313069765e+02, // 605
            -1.035439139819082e+02, // 606
            -7.428317145191228e+01, // 607
            -1.321367681221281e+02, // 608
             1.579265216950560e+03, // 609
            -1.109259613088457e+03, // 610
             8.104616650208316e+02, // 611
             7.892198891085209e+01, // 612
             2.616737132583742e+02, // 613
            -5.750069233957385e+01, // 614
             7.229209560937371e+02, // 615
             1.699947658845723e+01, // 616
             3.020126665449087e+02, // 617
             5.696613332161622e+02, // 618
            -4.810196783115379e+01, // 619
            -8.717920614314434e+01, // 620
             1.100796129906969e-05, // 621
             2.322783674534443e+02, // 622
            -1.215888878970547e+02, // 623
             3.049295152983784e+01, // 624
             7.974997183010122e+01, // 625
             1.969038699501946e+01, // 626
            -3.160936616715360e+02, // 627
             2.387678805671195e+02, // 628
            -2.105023678659799e+01, // 629
             2.341522323767263e+01, // 630
            -1.654254289762472e+01, // 631
            -9.367264355777776e+00, // 632
             6.071961432100549e-01, // 633
             1.550529373164920e+02, // 634
             5.377225207176191e+01, // 635
             2.167118817940382e+00, // 636
             5.466574563295496e+01, // 637
             1.504277807675258e+01, // 638
            -5.709760625030179e+01, // 639
            -9.395651739188926e+00, // 640
             1.180378660422353e+01, // 641
             3.985564725159776e+01, // 642
            -9.909368215696966e+01, // 643
            -1.071620031081982e+01, // 644
            -2.079041617126568e+02, // 645
            -5.062978689813826e+02, // 646
             3.664512765573611e+02, // 647
             1.221577346688538e+01, // 648
             4.345105889649761e+01, // 649
            -1.783837250464235e+02, // 650
            -3.847401566080425e+00, // 651
            -3.993428244687223e-01, // 652
            -9.016730505799795e+01, // 653
            -3.225908289622385e+02, // 654
             1.145140196244947e+01, // 655
            -3.630476849651367e+02, // 656
            -1.458804337209240e+02, // 657
             5.110197483953728e+00, // 658
             3.364146464727637e+00, // 659
             3.301077121766827e-02, // 660
             1.008603863465519e+02, // 661
             7.601562882539380e+01, // 662
            -1.365537843184428e+02, // 663
            -3.791050126625581e+01, // 664
            -2.211516775611344e+02, // 665
            -5.667355476367208e+01, // 666
             4.554845740683749e+01, // 667
             4.493527695396048e-01, // 668
            -4.961194862981873e+01, // 669
             1.924367625828787e+02, // 670
             6.664193888976933e+00, // 671
             5.054474252534595e+01, // 672
            -1.094644671765112e+02, // 673
             3.027434361362772e+01, // 674
             6.792534323800669e+02, // 675
            -9.340375243322723e+02, // 676
            -1.132844773919380e+02, // 677
             8.745350124277397e+01, // 678
            -1.382123878383735e+02, // 679
            -1.065509890416244e+02, // 680
            -8.144862985898155e+01, // 681
            -1.389145769425710e+02, // 682
             1.947669238097979e+01, // 683
            -3.117740311180567e+02, // 684
             2.092121218096960e+00, // 685
            -2.864853638357793e+02, // 686
             4.195865234623994e-02, // 687
             5.498620629560610e+02, // 688
            -4.804214712367257e+03, // 689
            -1.297550441080183e+02, // 690
            -6.807947199571481e+01, // 691
            -3.621281823953473e+02, // 692
             6.135125337075329e+00, // 693
            -3.163267010472982e+02, // 694
             1.094561579608006e+03, // 695
            -9.083502556233915e+00, // 696
             1.740043471542719e+01, // 697
             1.278582164707737e+00, // 698
             4.129139623355986e+02, // 699
            -7.579450212038073e+01, // 700
             4.190886292023520e+00, // 701
            -4.343028044304499e+01, // 702
            -1.211872821824737e+00, // 703
             4.747901799331590e-01, // 704
            -1.478130900439353e+02, // 705
             6.755933587304324e+00, // 706
            -4.762865979390527e+01, // 707
             2.300069762983482e+02, // 708
             5.492179215117868e+00, // 709
            -8.585153410577118e+02, // 710
            -1.907068677764091e+02, // 711
             2.922317296165604e+02, // 712
             2.441332371363576e+00, // 713
            -1.024911977842749e+02, // 714
            -1.382990406087634e+02, // 715
            -1.984496404185546e+01, // 716
             1.341876819551796e+02, // 717
            -4.976854168251601e-02, // 718
             1.373505405438879e+01, // 719
             5.313720182815378e+01, // 720
             2.563915178017350e+00, // 721
             2.941715117824716e-02, // 722
             2.661381473927143e+01, // 723
             2.779821509805379e+01, // 724
             3.744911131616884e+02, // 725
            -2.889006719747166e+03, // 726
            -1.014768211291951e-03, // 727
            -9.755600111927809e+00, // 728
             1.085145556387786e+01, // 729
             1.065257792166324e+02, // 730
            -3.405535820369191e+01, // 731
             3.506678505456618e+02, // 732
             2.502575652871121e+01, // 733
            -5.831966520120104e+01, // 734
             5.155093312039343e+02, // 735
             5.212367412709281e+01, // 736
            -2.265776294291582e+01, // 737
             4.352366819909598e+02, // 738
             1.854552180709873e-01, // 739
            -8.778202547880409e+01, // 740
            -1.229806352773503e+01, // 741
            -8.096312999441761e+01, // 742
             1.814297879700132e+02, // 743
             1.747657051932082e+02, // 744
             8.034776968888472e+00, // 745
             5.644437311248861e+01, // 746
            -2.686621967223845e+00, // 747
            -4.004204671926289e+02, // 748
             3.530994516719329e+01, // 749
            -5.182951069122871e+00, // 750
            -5.259060859853997e+01, // 751
            -1.582495176455328e+03, // 752
            -5.543748896509173e+01, // 753
            -4.865169503872703e+00, // 754
            -7.842219119896885e+01, // 755
             3.207148149362782e+01, // 756
             2.482974018056515e+01, // 757
            -1.489159162737434e+02, // 758
             8.226287903375567e+00, // 759
            -5.892197849568388e+01, // 760
             9.629157904250107e+01, // 761
            -5.992523852132874e+01, // 762
             3.706610080415435e+02, // 763
             2.167523999092600e+02, // 764
            -2.615057026015507e+01, // 765
            -7.282859980124778e+01, // 766
             2.204485777715469e+02, // 767
             1.514053269329537e+00, // 768
            -1.144917812002702e+01, // 769
             2.193339312238368e+01, // 770
            -2.702728192752198e+01, // 771
            -7.144536947781232e+01, // 772
             2.266648352055149e+03, // 773
            -3.436053047218398e+02, // 774
            -2.010126837404098e+02, // 775
             2.255693742715819e+02, // 776
             1.115860099705919e+02, // 777
             9.687672075286800e+01, // 778
             1.087321049945379e+02, // 779
             1.180707628526660e+02, // 780
            -2.475598081859003e+02, // 781
             1.614840082888167e+02, // 782
            -1.256591212205524e+01, // 783
             2.020877459598513e+01, // 784
             1.196341605947409e+02, // 785
            -6.603103657326601e+01, // 786
             3.040119377190785e+01, // 787
             1.141583119049012e-01, // 788
            -1.230780180771500e+01, // 789
            -1.672357254527494e+02, // 790
             1.756925892886063e+01, // 791
            -2.180932477319792e-01, // 792
            -1.587963253467493e+02, // 793
             4.006636555969081e+01, // 794
             8.344391978041417e+02, // 795
            -5.889834974302523e+00, // 796
            -1.314311124731466e+01, // 797
            -8.629841603282976e-01, // 798
            -1.828266915664140e+00, // 799
            -3.715755478881237e+02, // 800
             1.536240028461528e+02, // 801
            -7.498590770169058e+00, // 802
            -1.499030593533136e+02, // 803
             3.762116880121749e+02, // 804
            -7.954295525445619e+02, // 805
            -1.321561507510311e+01, // 806
             9.553627271580538e+01, // 807
            -1.193510927296685e+01, // 808
            -7.282415934641621e+02, // 809
             4.412037153647534e-01, // 810
            -7.285747493509348e+01, // 811
            -8.464698753427971e+00, // 812
             1.258529366650444e+01, // 813
             4.667457320171096e+01, // 814
            -1.706414173834103e+03, // 815
            -2.701973557306781e+02, // 816
             8.779443438906134e+01, // 817
            -3.005163553759618e+03, // 818
            -1.531621685349705e+00, // 819
            -2.058283981803345e+02, // 820
            -2.789009970074985e+01, // 821
             2.049486996381875e+02, // 822
            -2.577488552955475e+00, // 823
             1.747614995061173e+01, // 824
             1.922778481962405e+01, // 825
            -3.878254289248501e+01, // 826
            -1.395317329321860e+00, // 827
             1.765107384275902e+02, // 828
             3.325472648831034e+01, // 829
             2.563073640661935e-01, // 830
            -2.083412032551323e+01, // 831
             2.791249318675694e+00, // 832
             9.331848293318144e+01, // 833
             1.728303641316564e+01, // 834
             1.215276798975268e+02, // 835
            -7.387638273893829e+01, // 836
            -1.754073094363667e-01, // 837
             3.076624787106664e+01, // 838
             4.751699804871815e+02, // 839
             6.394712632471128e+01, // 840
            -3.029941387336376e+01, // 841
            -4.382239948961119e+00, // 842
             2.174646126119722e+01, // 843
             1.943253868333801e+01, // 844
             3.514038176142098e+01, // 845
             3.222342140895020e+01, // 846
             2.501839345661384e+02, // 847
            -2.279339475601518e+01, // 848
             2.417253776696937e+01, // 849
             7.092365137570981e-03, // 850
             1.282360763808024e+02, // 851
            -4.781706615564705e+01, // 852
             8.865614073202360e+01, // 853
            -9.731457963588571e+00, // 854
            -2.249320002009973e+01, // 855
             1.420224712425141e+02, // 856
            -2.910133589519597e+02, // 857
             8.911449211835061e+01, // 858
             1.396610130379505e+01, // 859
             7.048566800444372e+01, // 860
             2.135373389135794e+00, // 861
            -8.747170650155098e-03, // 862
             3.425687836051863e+01, // 863
             6.253398216956900e+00, // 864
            -2.042192577540751e+02, // 865
            -1.261061174180472e+00, // 866
             1.487653271038401e+00, // 867
             1.698674566130070e+02, // 868
            -6.920158124403944e+02, // 869
            -4.269419830018221e+01, // 870
            -1.088446286482695e+03, // 871
             5.029422123883471e-01, // 872
            -3.219781472126461e+02, // 873
            -7.621837585924389e-02, // 874
             6.430360027621481e-01, // 875
            -3.797486124564654e+02, // 876
            -3.547694037683091e+02, // 877
             4.422289177596859e-02, // 878
             5.303564655849453e+00, // 879
             5.497141555045870e+00, // 880
             1.731424643775497e+01, // 881
             1.680763690902295e-01, // 882
            -1.954355536341149e+03, // 883
            -8.421695969909642e+01, // 884
            -6.206075760507854e+01, // 885
             2.158784594041806e+02, // 886
             1.346593710726339e+01, // 887
            -5.618528930374228e-01, // 888
             9.566148920058374e+01, // 889
             2.013676389578146e+00, // 890
            -5.327092001598122e+02, // 891
            -4.312705008855327e-02, // 892
            -1.499402467675335e+02, // 893
             3.761275558888919e+02, // 894
            -2.351750264529842e+01, // 895
            -1.601564797892478e+01, // 896
            -6.878394495776925e+01, // 897
             3.312318367867105e+01, // 898
            -1.595000634843883e-02, // 899
            -3.210330190354551e-02, // 900
            -3.032269008039980e+02, // 901
             3.954319383972138e+00, // 902
            -4.639053906114211e+02, // 903
            -1.522764441997616e+00, // 904
             5.097266333818887e+01, // 905
             1.153988115635849e+02, // 906
            -4.203430649612088e+01, // 907
            -3.652990547029371e+02, // 908
            -5.094342653175512e+02, // 909
            -1.593623318924089e+01, // 910
            -3.763169265456800e+00, // 911
            -8.412269811831810e+01, // 912
            -6.941789891601563e+00, // 913
            -4.836358372490096e+01, // 914
            -3.144966571974096e+01, // 915
            -2.452599181327557e+02, // 916
             1.409775834674117e+02, // 917
            -1.089002199376864e+02, // 918
            -3.571137423092623e+01, // 919
            -2.201864787909638e+02, // 920
            -3.857213063693824e+02, // 921
            -6.717649212852050e+00, // 922
            -9.556708817780262e-01, // 923
             1.407839147310181e+00, // 924
            -3.649156274998892e-01, // 925
            -1.778075119515790e+02, // 926
             2.183388399377768e+01, // 927
            -3.422145073679636e+02, // 928
            -3.150313354923314e+01, // 929
            -2.716881913115721e-01, // 930
             8.971413924237284e+00, // 931
             2.227858898120772e+02, // 932
             4.664396957515581e+01, // 933
            -4.132588523258337e+01, // 934
             4.544012684569636e+01, // 935
            -5.473810162810176e+01, // 936
             1.155743332653460e+02, // 937
             5.289921003611732e+01, // 938
             6.455677918631952e+01, // 939
            -6.875701931914498e+02, // 940
            -4.826861918618039e+00, // 941
             3.650258632755611e-02, // 942
             7.431330241878560e+01, // 943
             7.989658744407207e+01, // 944
            -3.450431815407653e+02, // 945
            -6.740017367424717e-03, // 946
            -5.401058699117630e+02, // 947
             7.010985587254650e+01, // 948
             1.305382912573572e+01, // 949
            -1.348977551022284e+02, // 950
            -6.179003865331583e+01, // 951
            -1.890360036441061e-01, // 952
             3.703983353489889e+00, // 953
            -1.249676655616125e+00, // 954
             3.271092828026526e+00, // 955
            -8.143010579946262e+01, // 956
            -1.659121292997048e+03, // 957
            -6.976030598178462e-02, // 958
            -1.231476380931459e+00, // 959
            -2.457431391871106e+02, // 960
            -1.207178541326352e+02, // 961
             1.500360502591414e+02, // 962
            -3.812648883853981e+00, // 963
             2.059131563070320e+01, // 964
            -3.429986095683684e+00, // 965
            -9.983848903627408e-01, // 966
             5.381021577628474e+01, // 967
            -4.179888714739666e+01, // 968
            -3.122496964625582e+02, // 969
             1.145560458593184e+03, // 970
             1.188389615078204e+02, // 971
            -7.271995428384336e+00, // 972
            -1.781200501608987e-01, // 973
             3.281909591659644e+01, // 974
             9.480900074910848e+01, // 975
            -4.427691906615463e+01, // 976
             8.249226473706784e+02, // 977
            -1.800809825206775e+02, // 978
             4.597703946166529e+00, // 979
             5.116398216069332e+02, // 980
             7.159893840759754e-02, // 981
            -3.325794148357073e+02, // 982
             4.675829437684224e+01, // 983
             2.310563471848346e+02, // 984
            -6.987818049386279e+01, // 985
            -1.738472008533166e+02, // 986
             5.721863619947674e+00, // 987
             2.940266041704384e-03, // 988
             6.896654255846470e+01, // 989
             2.119843809718028e+02, // 990
            -2.208983558395590e+02, // 991
             1.703374544173919e+02, // 992
            -9.688830029302064e+00, // 993
            -7.586388337339469e+01, // 994
            -2.480062785130920e+01, // 995
            -7.982608681653211e+01, // 996
            -2.215017550746678e+01, // 997
             9.093343647075773e-01, // 998
             3.877467415955554e+02, // 999
            -1.050184533198941e-02, // 1000
            -1.554244736364364e+02, // 1001
            -1.690273688561264e+01, // 1002
            -2.907349267661168e+01, // 1003
             1.158388483238228e+01, // 1004
             4.779402567313754e+01, // 1005
            -7.691535170863574e+00, // 1006
            -4.621935883299916e+01, // 1007
            -4.073714131014681e+01, // 1008
            -2.141833547347330e+02, // 1009
            -6.088215614168740e+01, // 1010
            -7.929149100850215e+01, // 1011
            -4.093991024110582e+01, // 1012
            -1.459743672248163e+00, // 1013
            -1.876463215991315e+01, // 1014
             2.208480099959554e+02, // 1015
            -1.127627123068364e+02, // 1016
             1.127500385439292e+02, // 1017
            -4.678761182169940e+01, // 1018
            -1.859471863630634e+01, // 1019
            -1.845997809911193e+01, // 1020
            -8.316600767395325e+01, // 1021
            -3.767008485144482e+02, // 1022
            -1.893463438745231e+02, // 1023
            -5.632488746320107e+02, // 1024
            -2.073922767342092e+01, // 1025
            -2.565270909032326e+01, // 1026
            -8.355044477445108e+01, // 1027
             1.289639309568784e+01, // 1028
            -7.980870507862734e+00, // 1029
            -6.668718232084460e+01, // 1030
             1.444532570528148e+00, // 1031
             2.641424935210907e+01, // 1032
             2.421986840434774e+02, // 1033
             1.202164299337720e+01, // 1034
             1.493546817879098e+02, // 1035
             3.128594618105373e+02, // 1036
            -1.572096331748026e+02, // 1037
             6.055610909052427e+02, // 1038
            -3.212326053296235e+02, // 1039
             3.221795899262449e+01, // 1040
             1.953665926065303e+02, // 1041
            -7.106546252171488e+00, // 1042
             2.954023158994606e+01, // 1043
             1.810593413408966e+01, // 1044
            -2.531608679090205e+02, // 1045
            -4.457623615290171e+01, // 1046
            -4.218500138441604e+00, // 1047
            -1.273051653844135e+02, // 1048
             1.613175733269582e+01, // 1049
             1.820905641104162e+02, // 1050
             3.260492541596042e+02, // 1051
             3.388555521730304e+02, // 1052
             3.547959449449198e+01, // 1053
             4.018271799780147e-02, // 1054
             2.775497503224847e+01, // 1055
            -6.927752165974063e+01, // 1056
            -2.141554936004547e+01, // 1057
             1.214924827477635e+02, // 1058
            -2.231485453374565e+01, // 1059
             5.093832039741417e+02, // 1060
             3.300979151036160e+02, // 1061
            -1.046821912904446e+01, // 1062
             3.057940953586540e-01, // 1063
             2.355177407026137e+00, // 1064
             1.387193969197073e+01, // 1065
            -3.383915505680231e+02, // 1066
            -7.244269758405230e+02, // 1067
             8.559723550647330e+00, // 1068
            -9.785966802449426e+00, // 1069
             4.440712433307088e+01, // 1070
             2.607888226634410e+01, // 1071
            -7.826665303467089e-01, // 1072
             4.111841871033454e+01, // 1073
            -2.465985826515135e+01, // 1074
             2.589759659981662e+00, // 1075
            -5.802409210433089e+00, // 1076
             8.751765903499590e+01, // 1077
            -3.919061799256038e+01, // 1078
            -1.258607750987664e+01, // 1079
             6.255471976661487e+02, // 1080
             1.875465018069601e+02, // 1081
             4.297613654346313e+01, // 1082
             2.702930751720655e+02, // 1083
             1.042594761914233e+02, // 1084
             2.598621803365622e+01, // 1085
             3.045805857622347e-01, // 1086
             6.791518294812292e-01, // 1087
            -4.227124265034329e+00, // 1088
             2.152170723476908e+02, // 1089
             7.590628124346056e+02, // 1090
             1.943831372307658e+00, // 1091
            -1.497542979080792e+02, // 1092
            -2.607118862677062e+01, // 1093
            -2.769098077208526e+01, // 1094
             1.226744318391890e-02, // 1095
            -9.703121586022659e+02, // 1096
            -9.143147296333233e+00, // 1097
             3.466377541175964e+02, // 1098
            -2.505742840007701e+00, // 1099
             3.322398255619192e+00, // 1100
            -1.456269710562328e+02, // 1101
             3.936572102257592e+01, // 1102
            -1.332253353169890e+02, // 1103
             1.375965702722686e+00, // 1104
             4.464288260111447e-01, // 1105
            -1.194607326078926e+02, // 1106
             1.448202883836958e+02, // 1107
            -1.054492072174220e-02, // 1108
            -3.573934676047123e+02, // 1109
             1.866088178058646e+00, // 1110
             1.358143138732271e+01, // 1111
             6.255259359678729e-01, // 1112
             1.508194439355487e+01, // 1113
             5.304625942579671e+02, // 1114
             7.894361678713320e-02, // 1115
             5.162613380098854e+01, // 1116
            -3.152815196132764e+02, // 1117
            -5.863744586249718e+02, // 1118
             8.369175811759129e+01, // 1119
             1.889190610772419e+02, // 1120
            -6.857888412901287e+00, // 1121
            -1.261136992348879e+00, // 1122
             1.607145731187677e+01, // 1123
             2.075393052363707e+02, // 1124
             1.799393782975348e+01, // 1125
             1.963093851537337e+02, // 1126
             7.987414332325410e+01, // 1127
             5.349054310722425e+02, // 1128
            -2.523665137013139e-01, // 1129
            -1.251360416061409e+02, // 1130
            -1.999553000068903e+02, // 1131
            -4.355401389500221e+01, // 1132
            -5.698486649248873e+01, // 1133
             2.306048860057161e+01, // 1134
             4.618050530954716e+02, // 1135
             2.197860673161256e+02, // 1136
             1.870766344513799e+02, // 1137
            -1.247835295905693e+01, // 1138
             1.118809535751513e+02, // 1139
             3.670104172327828e+02, // 1140
             5.633669500965310e-02, // 1141
            -8.281993780687030e+00, // 1142
             1.109028475825280e+00, // 1143
            -7.090325669045004e+01, // 1144
             1.784411703051748e+01, // 1145
             8.746721277540001e+02, // 1146
            -7.960352881017982e+01, // 1147
             9.290963856894902e+01, // 1148
            -2.995307188037677e+02, // 1149
            -2.612784205046815e+01, // 1150
             2.227252783644466e+02, // 1151
             4.387021481471372e-02, // 1152
            -8.179952722008050e+00, // 1153
             2.011981668521770e+02, // 1154
             4.703106039304883e+00, // 1155
            -8.341154184300619e+00, // 1156
             1.579965980408136e+02, // 1157
             3.400950082295078e+00, // 1158
             1.363048303890360e+02, // 1159
            -5.491683646143614e+01, // 1160
             2.385393188436522e+01, // 1161
            -5.327870430083321e+00, // 1162
             8.306189979335606e+01, // 1163
             4.000051919433719e+01, // 1164
             5.581376349135918e-01, // 1165
            -8.410038443148320e+00, // 1166
            -1.609092470936343e+01, // 1167
             9.312207004077641e+01, // 1168
            -7.660690277470960e+02, // 1169
             3.234290979460390e+01, // 1170
             2.723470903340870e+01, // 1171
            -2.193329233918325e+02, // 1172
             1.002143995242081e+01, // 1173
             6.815507480677556e+01, // 1174
            -5.443741224654525e+02, // 1175
             1.284081156935152e+02, // 1176
            -9.703568393409933e+00, // 1177
            -2.171553326581376e+00, // 1178
             2.728320155159679e-02, // 1179
            -4.913498349121126e+00, // 1180
            -7.429669317769429e+01, // 1181
             5.397099565038776e+00, // 1182
            -6.609875582607530e+00, // 1183
            -1.415644460167116e+00, // 1184
             5.742300373749516e+01, // 1185
             9.593521005255580e+00, // 1186
             3.205804175193027e-01, // 1187
             5.813251777014233e-01, // 1188
            -1.149787472102379e+02, // 1189
             3.623270033811049e+01, // 1190
             1.541377571896129e+02, // 1191
             1.068947742638954e+03, // 1192
            -2.293604873737284e+00, // 1193
             1.097533676626590e+01, // 1194
             2.942424074742697e+03, // 1195
             1.349258949494219e+01, // 1196
            -2.752587735740022e+00, // 1197
             3.542428785268380e+01, // 1198
            -2.191560567563459e+01, // 1199
             2.796050416300529e+02, // 1200
            -1.000484477280425e-01, // 1201
            -1.394353169575312e+02, // 1202
             3.405397322375011e+02, // 1203
             2.260754447057487e+01, // 1204
             8.754955181835554e+00, // 1205
             1.218701249707698e+00, // 1206
            -4.125833711786163e-01, // 1207
            -1.167065976283818e+01, // 1208
            -1.561287311666411e-03, // 1209
             3.706438436670225e+01, // 1210
             1.657624535347462e+00, // 1211
             1.830610323421649e+02, // 1212
            -6.583993090232546e+01, // 1213
            -6.249301586704827e+02, // 1214
            -5.645992331928255e+01, // 1215
            -6.939634920403379e-02, // 1216
             1.224645768914899e+01, // 1217
            -1.227268777480732e+02, // 1218
             8.816689058597579e+00, // 1219
            -2.001944992659798e+01, // 1220
             1.888697240669779e+01, // 1221
            -3.278106194472775e-01, // 1222
             2.914070035572486e+01, // 1223
             3.707257977855189e+00, // 1224
             1.444417226139335e+02, // 1225
            -1.046397809577976e+00, // 1226
             7.604704322698618e+01, // 1227
             2.782108533009235e+02, // 1228
            -2.912532941179408e+01, // 1229
            -5.528153571127771e+02, // 1230
             1.628669419878370e+00, // 1231
            -2.674778880869749e+02, // 1232
             6.890171844707935e+01, // 1233
             6.315295123006392e+01, // 1234
            -2.935007808041827e+02}; // 1235
    m_k_x_intra_A_B_1 =  8.654689106864001e-01; // A^(-1))
    m_k_x_intra_A_C_1 =  3.223223742381896e+00; // A^(-1))
    m_k_x_intra_A_D_1 =  2.715801319222361e+00; // A^(-1))
    m_k_x_intra_A_E_1 =  3.614535993389776e+00; // A^(-1))
    m_k_x_intra_A_F_1 =  1.350033943881908e+00; // A^(-1))
    m_k_x_intra_A_G_1 =  2.261028944219204e+00; // A^(-1))
    m_k_x_intra_A_H_1 =  5.104697343781389e+00; // A^(-1))
    m_k_x_inter_A_I_0 =  1.798767829907618e+00; // A^(-1))
    m_k_x_inter_A_J_0 =  2.078633305602942e+00; // A^(-1))
    m_k_x_inter_A_X_0 =  2.609482971474203e+00; // A^(-1))
    m_k_x_intra_B_C_1 =  2.581416882212357e+00; // A^(-1))
    m_k_x_intra_B_D_1 =  3.624150504320633e+00; // A^(-1))
    m_k_x_intra_B_E_1 =  2.751633515617603e+00; // A^(-1))
    m_k_x_intra_B_F_1 =  9.854154784874466e-01; // A^(-1))
    m_k_x_intra_B_G_1 =  1.203436081632294e+00; // A^(-1))
    m_k_x_intra_B_H_1 =  1.475025545902388e+00; // A^(-1))
    m_k_x_inter_B_I_0 =  2.400655976570595e+00; // A^(-1))
    m_k_x_inter_B_J_0 =  1.398541316846940e+00; // A^(-1))
    m_k_x_inter_B_X_0 =  4.853414679945954e-01; // A^(-1))
    m_k_x_intra_C_D_1 =  3.822211599618219e+00; // A^(-1))
    m_k_x_intra_C_E_1 =  1.172584919611827e+00; // A^(-1))
    m_k_x_intra_C_F_1 =  1.772977210205841e+00; // A^(-1))
    m_k_x_intra_C_G_1 =  1.697612454283178e+00; // A^(-1))
    m_k_x_intra_C_H_1 =  2.832755489007420e+00; // A^(-1))
    m_k_x_inter_C_I_0 =  2.284170653894673e+00; // A^(-1))
    m_k_x_inter_C_J_0 =  1.881533532536880e+00; // A^(-1))
    m_k_x_inter_C_X_0 =  5.556373294994291e-01; // A^(-1))
    m_k_x_intra_D_D_1 =  2.542000980544206e+00; // A^(-1))
    m_k_x_intra_D_E_1 =  2.920214107095704e+00; // A^(-1))
    m_k_x_intra_D_F_1 =  4.101076677986939e+00; // A^(-1))
    m_k_x_intra_D_G_1 =  2.875504524577436e+00; // A^(-1))
    m_k_x_intra_D_H_1 =  4.223490001795545e+00; // A^(-1))
    m_k_x_inter_D_I_0 =  2.106664645006895e-01; // A^(-1))
    m_k_x_inter_D_J_0 =  4.412816375474257e-01; // A^(-1))
    m_k_x_inter_D_X_0 =  5.934101690352397e+00; // A^(-1))
    m_k_x_intra_E_F_1 =  1.647410844104553e+00; // A^(-1))
    m_k_x_intra_E_G_1 =  1.372978127537861e+00; // A^(-1))
    m_k_x_intra_E_H_1 =  4.265921379668212e+00; // A^(-1))
    m_k_x_inter_E_I_0 =  4.030788639923708e+00; // A^(-1))
    m_k_x_inter_E_J_0 =  5.959736493567928e-01; // A^(-1))
    m_k_x_inter_E_X_0 =  1.621383859604507e+00; // A^(-1))
    m_k_x_intra_F_G_1 =  4.586934057183771e+00; // A^(-1))
    m_k_x_intra_F_H_1 =  2.339009546646943e+00; // A^(-1))
    m_k_x_inter_F_I_0 =  5.510864974571551e-01; // A^(-1))
    m_k_x_inter_F_J_0 =  1.134918095647713e+00; // A^(-1))
    m_k_x_inter_F_X_0 =  4.976612270069122e+00; // A^(-1))
    m_k_x_intra_G_H_1 =  4.430875112555600e+00; // A^(-1))
    m_k_x_inter_G_I_0 =  1.473587605681001e+00; // A^(-1))
    m_k_x_inter_G_J_0 =  1.432618701930728e+00; // A^(-1))
    m_k_x_inter_G_X_0 =  1.937765194528984e+00; // A^(-1))
    m_k_x_intra_H_H_1 =  2.053088148428438e+00; // A^(-1))
    m_k_x_inter_H_I_0 =  5.915134595473510e-01; // A^(-1))
    m_k_x_inter_H_J_0 =  9.114064303681761e-01; // A^(-1))
    m_k_x_inter_H_X_0 =  1.222827240559410e+00; // A^(-1))
    m_k_x_intra_I_J_1 =  5.950843928593275e-01; // A^(-1))
    m_k_x_intra_J_J_1 =  3.583997602040751e+00; // A^(-1))
    m_A =  1.256560477091481e-05; // A^(12))
    m_B =  1.680116619090949e-04; // A^(12))
    m_C =  4.773222256033435e-01; // A^(12))
    m_D =  2.264125495894371e-06; // A^(12))
    m_ri =  7.000000000000000e+00; // A
    m_ro =  9.000000000000000e+00; // A

    } // end if mon1 == "nma" and mon2 == "h2o"

    // =====>> END SECTION CONSTRUCTOR <<=====
}

//----------------------------------------------------------------------------//

double mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1::f_switch(const double r, double& g)
{
    if (r > m_ro) {
        g = 0.0;
        return 0.0;
    } else if (r > m_ri) {
        const double t1 = M_PI/(m_ro - m_ri);
        const double x = (r - m_ri)*t1;
        g = - std::sin(x)*t1/2.0;
        return (1.0 + std::cos(x))/2.0;
    } else {
        g = 0.0;
        return 1.0;
    }
}

//----------------------------------------------------------------------------//

 double mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1::eval(const double *xyz1, const double *xyz2, const size_t n) {
    std::vector<double> energies(n,0.0);
    std::vector<double> repulsions(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(45);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 36*j;
        const double *mon2 = xyz2 + 9*j;


        const double d12[3] =
                         {mon1[0] - mon2[0],
                          mon1[1] - mon2[1],
                          mon1[2] - mon2[2]};

        const double d12rsq = d12[0]*d12[0] + d12[1]*d12[1] + d12[2]*d12[2];
        const double d12r = std::sqrt(d12rsq);

        if (true  && d12r > m_ro ) {
             continue;
        }

        std::copy(mon1, mon1 + 36, xyz.begin() + 0);

        std::copy(mon2, mon2 + 9, xyz.begin() + 36);


        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_C_1_a = xyz.data() + 6;

        const double* coords_D_1_a = xyz.data() + 9;

        const double* coords_D_2_a = xyz.data() + 12;

        const double* coords_D_3_a = xyz.data() + 15;

        const double* coords_E_1_a = xyz.data() + 18;

        const double* coords_F_1_a = xyz.data() + 21;

        const double* coords_G_1_a = xyz.data() + 24;

        const double* coords_H_1_a = xyz.data() + 27;

        const double* coords_H_2_a = xyz.data() + 30;

        const double* coords_H_3_a = xyz.data() + 33;

        const double* coords_I_1_b = xyz.data() + 36;

        const double* coords_J_1_b = xyz.data() + 39;

        const double* coords_J_2_b = xyz.data() + 42;

        double coords_X_1_b[3];
        std::fill(coords_X_1_b,coords_X_1_b + 3, 0.0);

        double coords_X_2_b[3];
        std::fill(coords_X_2_b,coords_X_2_b + 3, 0.0);


        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        monomer m2;
        m2.setup(coords_I_1_b, w12, wcross, coords_X_1_b, coords_X_2_b);

        variable vs[129];

        double xs[129];

        xs[0] = vs[0].v_exp(m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[1] = vs[1].v_exp(m_k_x_intra_A_C_1, coords_A_1_a, coords_C_1_a);
        xs[2] = vs[2].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_1_a);
        xs[3] = vs[3].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_2_a);
        xs[4] = vs[4].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_3_a);
        xs[5] = vs[5].v_exp(m_k_x_intra_A_E_1, coords_A_1_a, coords_E_1_a);
        xs[6] = vs[6].v_exp(m_k_x_intra_A_F_1, coords_A_1_a, coords_F_1_a);
        xs[7] = vs[7].v_exp(m_k_x_intra_A_G_1, coords_A_1_a, coords_G_1_a);
        xs[8] = vs[8].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_1_a);
        xs[9] = vs[9].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_2_a);
        xs[10] = vs[10].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_3_a);
        xs[11] = vs[11].v_exp(m_k_x_inter_A_I_0, coords_A_1_a, coords_I_1_b);
        xs[12] = vs[12].v_exp(m_k_x_inter_A_J_0, coords_A_1_a, coords_J_1_b);
        xs[13] = vs[13].v_exp(m_k_x_inter_A_J_0, coords_A_1_a, coords_J_2_b);
        xs[14] = vs[14].v_coul(m_k_x_inter_A_X_0, coords_A_1_a, coords_X_1_b);
        xs[15] = vs[15].v_coul(m_k_x_inter_A_X_0, coords_A_1_a, coords_X_2_b);
        xs[16] = vs[16].v_exp(m_k_x_intra_B_C_1, coords_B_1_a, coords_C_1_a);
        xs[17] = vs[17].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_1_a);
        xs[18] = vs[18].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_2_a);
        xs[19] = vs[19].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_3_a);
        xs[20] = vs[20].v_exp(m_k_x_intra_B_E_1, coords_B_1_a, coords_E_1_a);
        xs[21] = vs[21].v_exp(m_k_x_intra_B_F_1, coords_B_1_a, coords_F_1_a);
        xs[22] = vs[22].v_exp(m_k_x_intra_B_G_1, coords_B_1_a, coords_G_1_a);
        xs[23] = vs[23].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_1_a);
        xs[24] = vs[24].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_2_a);
        xs[25] = vs[25].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_3_a);
        xs[26] = vs[26].v_exp(m_k_x_inter_B_I_0, coords_B_1_a, coords_I_1_b);
        xs[27] = vs[27].v_exp(m_k_x_inter_B_J_0, coords_B_1_a, coords_J_1_b);
        xs[28] = vs[28].v_exp(m_k_x_inter_B_J_0, coords_B_1_a, coords_J_2_b);
        xs[29] = vs[29].v_coul(m_k_x_inter_B_X_0, coords_B_1_a, coords_X_1_b);
        xs[30] = vs[30].v_coul(m_k_x_inter_B_X_0, coords_B_1_a, coords_X_2_b);
        xs[31] = vs[31].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_1_a);
        xs[32] = vs[32].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_2_a);
        xs[33] = vs[33].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_3_a);
        xs[34] = vs[34].v_exp(m_k_x_intra_C_E_1, coords_C_1_a, coords_E_1_a);
        xs[35] = vs[35].v_exp(m_k_x_intra_C_F_1, coords_C_1_a, coords_F_1_a);
        xs[36] = vs[36].v_exp(m_k_x_intra_C_G_1, coords_C_1_a, coords_G_1_a);
        xs[37] = vs[37].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_1_a);
        xs[38] = vs[38].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_2_a);
        xs[39] = vs[39].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_3_a);
        xs[40] = vs[40].v_exp(m_k_x_inter_C_I_0, coords_C_1_a, coords_I_1_b);
        xs[41] = vs[41].v_exp(m_k_x_inter_C_J_0, coords_C_1_a, coords_J_1_b);
        xs[42] = vs[42].v_exp(m_k_x_inter_C_J_0, coords_C_1_a, coords_J_2_b);
        xs[43] = vs[43].v_coul(m_k_x_inter_C_X_0, coords_C_1_a, coords_X_1_b);
        xs[44] = vs[44].v_coul(m_k_x_inter_C_X_0, coords_C_1_a, coords_X_2_b);
        xs[45] = vs[45].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_2_a);
        xs[46] = vs[46].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_3_a);
        xs[47] = vs[47].v_exp(m_k_x_intra_D_E_1, coords_D_1_a, coords_E_1_a);
        xs[48] = vs[48].v_exp(m_k_x_intra_D_F_1, coords_D_1_a, coords_F_1_a);
        xs[49] = vs[49].v_exp(m_k_x_intra_D_G_1, coords_D_1_a, coords_G_1_a);
        xs[50] = vs[50].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_1_a);
        xs[51] = vs[51].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_2_a);
        xs[52] = vs[52].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_3_a);
        xs[53] = vs[53].v_exp(m_k_x_inter_D_I_0, coords_D_1_a, coords_I_1_b);
        xs[54] = vs[54].v_exp(m_k_x_inter_D_J_0, coords_D_1_a, coords_J_1_b);
        xs[55] = vs[55].v_exp(m_k_x_inter_D_J_0, coords_D_1_a, coords_J_2_b);
        xs[56] = vs[56].v_coul(m_k_x_inter_D_X_0, coords_D_1_a, coords_X_1_b);
        xs[57] = vs[57].v_coul(m_k_x_inter_D_X_0, coords_D_1_a, coords_X_2_b);
        xs[58] = vs[58].v_exp(m_k_x_intra_D_D_1, coords_D_2_a, coords_D_3_a);
        xs[59] = vs[59].v_exp(m_k_x_intra_D_E_1, coords_D_2_a, coords_E_1_a);
        xs[60] = vs[60].v_exp(m_k_x_intra_D_F_1, coords_D_2_a, coords_F_1_a);
        xs[61] = vs[61].v_exp(m_k_x_intra_D_G_1, coords_D_2_a, coords_G_1_a);
        xs[62] = vs[62].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_1_a);
        xs[63] = vs[63].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_2_a);
        xs[64] = vs[64].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_3_a);
        xs[65] = vs[65].v_exp(m_k_x_inter_D_I_0, coords_D_2_a, coords_I_1_b);
        xs[66] = vs[66].v_exp(m_k_x_inter_D_J_0, coords_D_2_a, coords_J_1_b);
        xs[67] = vs[67].v_exp(m_k_x_inter_D_J_0, coords_D_2_a, coords_J_2_b);
        xs[68] = vs[68].v_coul(m_k_x_inter_D_X_0, coords_D_2_a, coords_X_1_b);
        xs[69] = vs[69].v_coul(m_k_x_inter_D_X_0, coords_D_2_a, coords_X_2_b);
        xs[70] = vs[70].v_exp(m_k_x_intra_D_E_1, coords_D_3_a, coords_E_1_a);
        xs[71] = vs[71].v_exp(m_k_x_intra_D_F_1, coords_D_3_a, coords_F_1_a);
        xs[72] = vs[72].v_exp(m_k_x_intra_D_G_1, coords_D_3_a, coords_G_1_a);
        xs[73] = vs[73].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_1_a);
        xs[74] = vs[74].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_2_a);
        xs[75] = vs[75].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_3_a);
        xs[76] = vs[76].v_exp(m_k_x_inter_D_I_0, coords_D_3_a, coords_I_1_b);
        xs[77] = vs[77].v_exp(m_k_x_inter_D_J_0, coords_D_3_a, coords_J_1_b);
        xs[78] = vs[78].v_exp(m_k_x_inter_D_J_0, coords_D_3_a, coords_J_2_b);
        xs[79] = vs[79].v_coul(m_k_x_inter_D_X_0, coords_D_3_a, coords_X_1_b);
        xs[80] = vs[80].v_coul(m_k_x_inter_D_X_0, coords_D_3_a, coords_X_2_b);
        xs[81] = vs[81].v_exp(m_k_x_intra_E_F_1, coords_E_1_a, coords_F_1_a);
        xs[82] = vs[82].v_exp(m_k_x_intra_E_G_1, coords_E_1_a, coords_G_1_a);
        xs[83] = vs[83].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_1_a);
        xs[84] = vs[84].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_2_a);
        xs[85] = vs[85].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_3_a);
        xs[86] = vs[86].v_exp(m_k_x_inter_E_I_0, coords_E_1_a, coords_I_1_b);
        xs[87] = vs[87].v_exp(m_k_x_inter_E_J_0, coords_E_1_a, coords_J_1_b);
        xs[88] = vs[88].v_exp(m_k_x_inter_E_J_0, coords_E_1_a, coords_J_2_b);
        xs[89] = vs[89].v_coul(m_k_x_inter_E_X_0, coords_E_1_a, coords_X_1_b);
        xs[90] = vs[90].v_coul(m_k_x_inter_E_X_0, coords_E_1_a, coords_X_2_b);
        xs[91] = vs[91].v_exp(m_k_x_intra_F_G_1, coords_F_1_a, coords_G_1_a);
        xs[92] = vs[92].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_1_a);
        xs[93] = vs[93].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_2_a);
        xs[94] = vs[94].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_3_a);
        xs[95] = vs[95].v_exp(m_k_x_inter_F_I_0, coords_F_1_a, coords_I_1_b);
        xs[96] = vs[96].v_exp(m_k_x_inter_F_J_0, coords_F_1_a, coords_J_1_b);
        xs[97] = vs[97].v_exp(m_k_x_inter_F_J_0, coords_F_1_a, coords_J_2_b);
        xs[98] = vs[98].v_coul(m_k_x_inter_F_X_0, coords_F_1_a, coords_X_1_b);
        xs[99] = vs[99].v_coul(m_k_x_inter_F_X_0, coords_F_1_a, coords_X_2_b);
        xs[100] = vs[100].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_1_a);
        xs[101] = vs[101].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_2_a);
        xs[102] = vs[102].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_3_a);
        xs[103] = vs[103].v_exp(m_k_x_inter_G_I_0, coords_G_1_a, coords_I_1_b);
        xs[104] = vs[104].v_exp(m_k_x_inter_G_J_0, coords_G_1_a, coords_J_1_b);
        xs[105] = vs[105].v_exp(m_k_x_inter_G_J_0, coords_G_1_a, coords_J_2_b);
        xs[106] = vs[106].v_coul(m_k_x_inter_G_X_0, coords_G_1_a, coords_X_1_b);
        xs[107] = vs[107].v_coul(m_k_x_inter_G_X_0, coords_G_1_a, coords_X_2_b);
        xs[108] = vs[108].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_2_a);
        xs[109] = vs[109].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_3_a);
        xs[110] = vs[110].v_exp(m_k_x_inter_H_I_0, coords_H_1_a, coords_I_1_b);
        xs[111] = vs[111].v_exp(m_k_x_inter_H_J_0, coords_H_1_a, coords_J_1_b);
        xs[112] = vs[112].v_exp(m_k_x_inter_H_J_0, coords_H_1_a, coords_J_2_b);
        xs[113] = vs[113].v_coul(m_k_x_inter_H_X_0, coords_H_1_a, coords_X_1_b);
        xs[114] = vs[114].v_coul(m_k_x_inter_H_X_0, coords_H_1_a, coords_X_2_b);
        xs[115] = vs[115].v_exp(m_k_x_intra_H_H_1, coords_H_2_a, coords_H_3_a);
        xs[116] = vs[116].v_exp(m_k_x_inter_H_I_0, coords_H_2_a, coords_I_1_b);
        xs[117] = vs[117].v_exp(m_k_x_inter_H_J_0, coords_H_2_a, coords_J_1_b);
        xs[118] = vs[118].v_exp(m_k_x_inter_H_J_0, coords_H_2_a, coords_J_2_b);
        xs[119] = vs[119].v_coul(m_k_x_inter_H_X_0, coords_H_2_a, coords_X_1_b);
        xs[120] = vs[120].v_coul(m_k_x_inter_H_X_0, coords_H_2_a, coords_X_2_b);
        xs[121] = vs[121].v_exp(m_k_x_inter_H_I_0, coords_H_3_a, coords_I_1_b);
        xs[122] = vs[122].v_exp(m_k_x_inter_H_J_0, coords_H_3_a, coords_J_1_b);
        xs[123] = vs[123].v_exp(m_k_x_inter_H_J_0, coords_H_3_a, coords_J_2_b);
        xs[124] = vs[124].v_coul(m_k_x_inter_H_X_0, coords_H_3_a, coords_X_1_b);
        xs[125] = vs[125].v_coul(m_k_x_inter_H_X_0, coords_H_3_a, coords_X_2_b);
        xs[126] = vs[126].v_exp(m_k_x_intra_I_J_1, coords_I_1_b, coords_J_1_b);
        xs[127] = vs[127].v_exp(m_k_x_intra_I_J_1, coords_I_1_b, coords_J_2_b);
        xs[128] = vs[128].v_exp(m_k_x_intra_J_J_1, coords_J_1_b, coords_J_2_b);

        double gsw12 = 0.0;
        double sw12 = f_switch(d12r, gsw12);

        sw = sw12;

        energies[j] = my_poly.eval(xs,coefficients.data());
        energies_sw[j] = energies[j]*sw;


        // Add LJ repulsions
        double repulsion = 0.0;
        std::vector<std::pair<int,int>> pair12 = {{0,1},{0,2},{0,6},{2,3},{2,4},{2,5},{6,7},{6,8},{8,9},{8,10},{8,11},{12,13},{12,14}};
        std::vector<std::pair<int,int>> pair13 = {{1, 2}, {7, 8}, {6, 9}, {2, 6}, {10, 11}, {4, 5}, {6, 11}, {6, 10}, {0, 7}, {9, 10}, {9, 11}, {0, 5}, {1, 6}, {0, 4}, {0, 3}, {0, 8}, {3, 4}, {3, 5}, {13, 14}};
        std::vector<std::pair<int,int>> pair14 = {{1, 3}, {5, 6}, {2, 8}, {0, 10}, {7, 11}, {1, 5}, {0, 11}, {3, 6}, {7, 10}, {1, 4}, {7, 9}, {2, 7}, {4, 6}, {1, 8}, {1, 7}, {0, 9}};


        for (int first_atom_idx = 0; first_atom_idx < xyz.size()/3-1; first_atom_idx++) {
            double x1 = xyz[first_atom_idx*3];
            double y1 = xyz[first_atom_idx*3+1];
            double z1 = xyz[first_atom_idx*3+2];
            for (int second_atom_idx = first_atom_idx+1; second_atom_idx < xyz.size()/3; second_atom_idx++){
                double x2 = xyz[second_atom_idx*3];
                double y2 = xyz[second_atom_idx*3+1];
                double z2 = xyz[second_atom_idx*3+2];
                double m_lj;

                // Choose lj coefficient
                std::pair<int,int> atompair(first_atom_idx, second_atom_idx);
                if (std::count(pair12.begin(), pair12.end(), atompair)) {
                    m_lj=m_A;
                }
                else if (std::count(pair13.begin(), pair13.end(), atompair)) {
                    m_lj=m_B*1000.0;
                }
                else if (std::count(pair14.begin(), pair14.end(), atompair)) {
                    m_lj=m_C*1000.0;
                }
                else {
                    m_lj=m_D*1000.0;
                }

                // Update energies and repulsions
                double dist = std::sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2));
                energies[j] += m_lj / std::pow(dist,12);
                energies_sw[j] += m_lj / std::pow(dist,12);
                repulsions[j] += m_lj / std::pow(dist,12);

            }
        }


    }

    double energy = 0.0;
    for (size_t i = 0; i < n; i++)
        energy += energies_sw[i];

    return energy;

}

//----------------------------------------------------------------------------//

double mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2_v1::eval(const double *xyz1, const double *xyz2, double *grad1, double *grad2 , const size_t n, std::vector<double> *virial) {
    std::vector<double> energies(n,0.0);
    std::vector<double> repulsions(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(45);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 36*j;
        const double *mon2 = xyz2 + 9*j;


        const double d12[3] =
                         {mon1[0] - mon2[0],
                          mon1[1] - mon2[1],
                          mon1[2] - mon2[2]};

        const double d12rsq = d12[0]*d12[0] + d12[1]*d12[1] + d12[2]*d12[2];
        const double d12r = std::sqrt(d12rsq);

        if (true  && d12r > m_ro ) {
             continue;
        }

        std::vector<double> gradients(45,0.0);

        std::copy(mon1, mon1 + 36, xyz.begin() + 0);

        std::copy(mon2, mon2 + 9, xyz.begin() + 36);
        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_C_1_a = xyz.data() + 6;

        const double* coords_D_1_a = xyz.data() + 9;

        const double* coords_D_2_a = xyz.data() + 12;

        const double* coords_D_3_a = xyz.data() + 15;

        const double* coords_E_1_a = xyz.data() + 18;

        const double* coords_F_1_a = xyz.data() + 21;

        const double* coords_G_1_a = xyz.data() + 24;

        const double* coords_H_1_a = xyz.data() + 27;

        const double* coords_H_2_a = xyz.data() + 30;

        const double* coords_H_3_a = xyz.data() + 33;

        const double* coords_I_1_b = xyz.data() + 36;

        const double* coords_J_1_b = xyz.data() + 39;

        const double* coords_J_2_b = xyz.data() + 42;

        double coords_X_1_b[3];
        std::fill(coords_X_1_b,coords_X_1_b + 3, 0.0);

        double coords_X_2_b[3];
        std::fill(coords_X_2_b,coords_X_2_b + 3, 0.0);


        double* coords_A_1_a_g = gradients.data() + 0;

        double* coords_B_1_a_g = gradients.data() + 3;

        double* coords_C_1_a_g = gradients.data() + 6;

        double* coords_D_1_a_g = gradients.data() + 9;

        double* coords_D_2_a_g = gradients.data() + 12;

        double* coords_D_3_a_g = gradients.data() + 15;

        double* coords_E_1_a_g = gradients.data() + 18;

        double* coords_F_1_a_g = gradients.data() + 21;

        double* coords_G_1_a_g = gradients.data() + 24;

        double* coords_H_1_a_g = gradients.data() + 27;

        double* coords_H_2_a_g = gradients.data() + 30;

        double* coords_H_3_a_g = gradients.data() + 33;

        double* coords_I_1_b_g = gradients.data() + 36;

        double* coords_J_1_b_g = gradients.data() + 39;

        double* coords_J_2_b_g = gradients.data() + 42;

        double coords_X_1_b_g[3];
        std::fill(coords_X_1_b_g,coords_X_1_b_g + 3, 0.0);

        double coords_X_2_b_g[3];
        std::fill(coords_X_2_b_g,coords_X_2_b_g + 3, 0.0);



        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        monomer m2;
        m2.setup(coords_I_1_b, w12, wcross, coords_X_1_b, coords_X_2_b);

        variable vs[129];

        double xs[129];


        double gxs[129];

        xs[0] = vs[0].v_exp(m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[1] = vs[1].v_exp(m_k_x_intra_A_C_1, coords_A_1_a, coords_C_1_a);
        xs[2] = vs[2].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_1_a);
        xs[3] = vs[3].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_2_a);
        xs[4] = vs[4].v_exp(m_k_x_intra_A_D_1, coords_A_1_a, coords_D_3_a);
        xs[5] = vs[5].v_exp(m_k_x_intra_A_E_1, coords_A_1_a, coords_E_1_a);
        xs[6] = vs[6].v_exp(m_k_x_intra_A_F_1, coords_A_1_a, coords_F_1_a);
        xs[7] = vs[7].v_exp(m_k_x_intra_A_G_1, coords_A_1_a, coords_G_1_a);
        xs[8] = vs[8].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_1_a);
        xs[9] = vs[9].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_2_a);
        xs[10] = vs[10].v_exp(m_k_x_intra_A_H_1, coords_A_1_a, coords_H_3_a);
        xs[11] = vs[11].v_exp(m_k_x_inter_A_I_0, coords_A_1_a, coords_I_1_b);
        xs[12] = vs[12].v_exp(m_k_x_inter_A_J_0, coords_A_1_a, coords_J_1_b);
        xs[13] = vs[13].v_exp(m_k_x_inter_A_J_0, coords_A_1_a, coords_J_2_b);
        xs[14] = vs[14].v_coul(m_k_x_inter_A_X_0, coords_A_1_a, coords_X_1_b);
        xs[15] = vs[15].v_coul(m_k_x_inter_A_X_0, coords_A_1_a, coords_X_2_b);
        xs[16] = vs[16].v_exp(m_k_x_intra_B_C_1, coords_B_1_a, coords_C_1_a);
        xs[17] = vs[17].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_1_a);
        xs[18] = vs[18].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_2_a);
        xs[19] = vs[19].v_exp(m_k_x_intra_B_D_1, coords_B_1_a, coords_D_3_a);
        xs[20] = vs[20].v_exp(m_k_x_intra_B_E_1, coords_B_1_a, coords_E_1_a);
        xs[21] = vs[21].v_exp(m_k_x_intra_B_F_1, coords_B_1_a, coords_F_1_a);
        xs[22] = vs[22].v_exp(m_k_x_intra_B_G_1, coords_B_1_a, coords_G_1_a);
        xs[23] = vs[23].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_1_a);
        xs[24] = vs[24].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_2_a);
        xs[25] = vs[25].v_exp(m_k_x_intra_B_H_1, coords_B_1_a, coords_H_3_a);
        xs[26] = vs[26].v_exp(m_k_x_inter_B_I_0, coords_B_1_a, coords_I_1_b);
        xs[27] = vs[27].v_exp(m_k_x_inter_B_J_0, coords_B_1_a, coords_J_1_b);
        xs[28] = vs[28].v_exp(m_k_x_inter_B_J_0, coords_B_1_a, coords_J_2_b);
        xs[29] = vs[29].v_coul(m_k_x_inter_B_X_0, coords_B_1_a, coords_X_1_b);
        xs[30] = vs[30].v_coul(m_k_x_inter_B_X_0, coords_B_1_a, coords_X_2_b);
        xs[31] = vs[31].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_1_a);
        xs[32] = vs[32].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_2_a);
        xs[33] = vs[33].v_exp(m_k_x_intra_C_D_1, coords_C_1_a, coords_D_3_a);
        xs[34] = vs[34].v_exp(m_k_x_intra_C_E_1, coords_C_1_a, coords_E_1_a);
        xs[35] = vs[35].v_exp(m_k_x_intra_C_F_1, coords_C_1_a, coords_F_1_a);
        xs[36] = vs[36].v_exp(m_k_x_intra_C_G_1, coords_C_1_a, coords_G_1_a);
        xs[37] = vs[37].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_1_a);
        xs[38] = vs[38].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_2_a);
        xs[39] = vs[39].v_exp(m_k_x_intra_C_H_1, coords_C_1_a, coords_H_3_a);
        xs[40] = vs[40].v_exp(m_k_x_inter_C_I_0, coords_C_1_a, coords_I_1_b);
        xs[41] = vs[41].v_exp(m_k_x_inter_C_J_0, coords_C_1_a, coords_J_1_b);
        xs[42] = vs[42].v_exp(m_k_x_inter_C_J_0, coords_C_1_a, coords_J_2_b);
        xs[43] = vs[43].v_coul(m_k_x_inter_C_X_0, coords_C_1_a, coords_X_1_b);
        xs[44] = vs[44].v_coul(m_k_x_inter_C_X_0, coords_C_1_a, coords_X_2_b);
        xs[45] = vs[45].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_2_a);
        xs[46] = vs[46].v_exp(m_k_x_intra_D_D_1, coords_D_1_a, coords_D_3_a);
        xs[47] = vs[47].v_exp(m_k_x_intra_D_E_1, coords_D_1_a, coords_E_1_a);
        xs[48] = vs[48].v_exp(m_k_x_intra_D_F_1, coords_D_1_a, coords_F_1_a);
        xs[49] = vs[49].v_exp(m_k_x_intra_D_G_1, coords_D_1_a, coords_G_1_a);
        xs[50] = vs[50].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_1_a);
        xs[51] = vs[51].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_2_a);
        xs[52] = vs[52].v_exp(m_k_x_intra_D_H_1, coords_D_1_a, coords_H_3_a);
        xs[53] = vs[53].v_exp(m_k_x_inter_D_I_0, coords_D_1_a, coords_I_1_b);
        xs[54] = vs[54].v_exp(m_k_x_inter_D_J_0, coords_D_1_a, coords_J_1_b);
        xs[55] = vs[55].v_exp(m_k_x_inter_D_J_0, coords_D_1_a, coords_J_2_b);
        xs[56] = vs[56].v_coul(m_k_x_inter_D_X_0, coords_D_1_a, coords_X_1_b);
        xs[57] = vs[57].v_coul(m_k_x_inter_D_X_0, coords_D_1_a, coords_X_2_b);
        xs[58] = vs[58].v_exp(m_k_x_intra_D_D_1, coords_D_2_a, coords_D_3_a);
        xs[59] = vs[59].v_exp(m_k_x_intra_D_E_1, coords_D_2_a, coords_E_1_a);
        xs[60] = vs[60].v_exp(m_k_x_intra_D_F_1, coords_D_2_a, coords_F_1_a);
        xs[61] = vs[61].v_exp(m_k_x_intra_D_G_1, coords_D_2_a, coords_G_1_a);
        xs[62] = vs[62].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_1_a);
        xs[63] = vs[63].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_2_a);
        xs[64] = vs[64].v_exp(m_k_x_intra_D_H_1, coords_D_2_a, coords_H_3_a);
        xs[65] = vs[65].v_exp(m_k_x_inter_D_I_0, coords_D_2_a, coords_I_1_b);
        xs[66] = vs[66].v_exp(m_k_x_inter_D_J_0, coords_D_2_a, coords_J_1_b);
        xs[67] = vs[67].v_exp(m_k_x_inter_D_J_0, coords_D_2_a, coords_J_2_b);
        xs[68] = vs[68].v_coul(m_k_x_inter_D_X_0, coords_D_2_a, coords_X_1_b);
        xs[69] = vs[69].v_coul(m_k_x_inter_D_X_0, coords_D_2_a, coords_X_2_b);
        xs[70] = vs[70].v_exp(m_k_x_intra_D_E_1, coords_D_3_a, coords_E_1_a);
        xs[71] = vs[71].v_exp(m_k_x_intra_D_F_1, coords_D_3_a, coords_F_1_a);
        xs[72] = vs[72].v_exp(m_k_x_intra_D_G_1, coords_D_3_a, coords_G_1_a);
        xs[73] = vs[73].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_1_a);
        xs[74] = vs[74].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_2_a);
        xs[75] = vs[75].v_exp(m_k_x_intra_D_H_1, coords_D_3_a, coords_H_3_a);
        xs[76] = vs[76].v_exp(m_k_x_inter_D_I_0, coords_D_3_a, coords_I_1_b);
        xs[77] = vs[77].v_exp(m_k_x_inter_D_J_0, coords_D_3_a, coords_J_1_b);
        xs[78] = vs[78].v_exp(m_k_x_inter_D_J_0, coords_D_3_a, coords_J_2_b);
        xs[79] = vs[79].v_coul(m_k_x_inter_D_X_0, coords_D_3_a, coords_X_1_b);
        xs[80] = vs[80].v_coul(m_k_x_inter_D_X_0, coords_D_3_a, coords_X_2_b);
        xs[81] = vs[81].v_exp(m_k_x_intra_E_F_1, coords_E_1_a, coords_F_1_a);
        xs[82] = vs[82].v_exp(m_k_x_intra_E_G_1, coords_E_1_a, coords_G_1_a);
        xs[83] = vs[83].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_1_a);
        xs[84] = vs[84].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_2_a);
        xs[85] = vs[85].v_exp(m_k_x_intra_E_H_1, coords_E_1_a, coords_H_3_a);
        xs[86] = vs[86].v_exp(m_k_x_inter_E_I_0, coords_E_1_a, coords_I_1_b);
        xs[87] = vs[87].v_exp(m_k_x_inter_E_J_0, coords_E_1_a, coords_J_1_b);
        xs[88] = vs[88].v_exp(m_k_x_inter_E_J_0, coords_E_1_a, coords_J_2_b);
        xs[89] = vs[89].v_coul(m_k_x_inter_E_X_0, coords_E_1_a, coords_X_1_b);
        xs[90] = vs[90].v_coul(m_k_x_inter_E_X_0, coords_E_1_a, coords_X_2_b);
        xs[91] = vs[91].v_exp(m_k_x_intra_F_G_1, coords_F_1_a, coords_G_1_a);
        xs[92] = vs[92].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_1_a);
        xs[93] = vs[93].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_2_a);
        xs[94] = vs[94].v_exp(m_k_x_intra_F_H_1, coords_F_1_a, coords_H_3_a);
        xs[95] = vs[95].v_exp(m_k_x_inter_F_I_0, coords_F_1_a, coords_I_1_b);
        xs[96] = vs[96].v_exp(m_k_x_inter_F_J_0, coords_F_1_a, coords_J_1_b);
        xs[97] = vs[97].v_exp(m_k_x_inter_F_J_0, coords_F_1_a, coords_J_2_b);
        xs[98] = vs[98].v_coul(m_k_x_inter_F_X_0, coords_F_1_a, coords_X_1_b);
        xs[99] = vs[99].v_coul(m_k_x_inter_F_X_0, coords_F_1_a, coords_X_2_b);
        xs[100] = vs[100].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_1_a);
        xs[101] = vs[101].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_2_a);
        xs[102] = vs[102].v_exp(m_k_x_intra_G_H_1, coords_G_1_a, coords_H_3_a);
        xs[103] = vs[103].v_exp(m_k_x_inter_G_I_0, coords_G_1_a, coords_I_1_b);
        xs[104] = vs[104].v_exp(m_k_x_inter_G_J_0, coords_G_1_a, coords_J_1_b);
        xs[105] = vs[105].v_exp(m_k_x_inter_G_J_0, coords_G_1_a, coords_J_2_b);
        xs[106] = vs[106].v_coul(m_k_x_inter_G_X_0, coords_G_1_a, coords_X_1_b);
        xs[107] = vs[107].v_coul(m_k_x_inter_G_X_0, coords_G_1_a, coords_X_2_b);
        xs[108] = vs[108].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_2_a);
        xs[109] = vs[109].v_exp(m_k_x_intra_H_H_1, coords_H_1_a, coords_H_3_a);
        xs[110] = vs[110].v_exp(m_k_x_inter_H_I_0, coords_H_1_a, coords_I_1_b);
        xs[111] = vs[111].v_exp(m_k_x_inter_H_J_0, coords_H_1_a, coords_J_1_b);
        xs[112] = vs[112].v_exp(m_k_x_inter_H_J_0, coords_H_1_a, coords_J_2_b);
        xs[113] = vs[113].v_coul(m_k_x_inter_H_X_0, coords_H_1_a, coords_X_1_b);
        xs[114] = vs[114].v_coul(m_k_x_inter_H_X_0, coords_H_1_a, coords_X_2_b);
        xs[115] = vs[115].v_exp(m_k_x_intra_H_H_1, coords_H_2_a, coords_H_3_a);
        xs[116] = vs[116].v_exp(m_k_x_inter_H_I_0, coords_H_2_a, coords_I_1_b);
        xs[117] = vs[117].v_exp(m_k_x_inter_H_J_0, coords_H_2_a, coords_J_1_b);
        xs[118] = vs[118].v_exp(m_k_x_inter_H_J_0, coords_H_2_a, coords_J_2_b);
        xs[119] = vs[119].v_coul(m_k_x_inter_H_X_0, coords_H_2_a, coords_X_1_b);
        xs[120] = vs[120].v_coul(m_k_x_inter_H_X_0, coords_H_2_a, coords_X_2_b);
        xs[121] = vs[121].v_exp(m_k_x_inter_H_I_0, coords_H_3_a, coords_I_1_b);
        xs[122] = vs[122].v_exp(m_k_x_inter_H_J_0, coords_H_3_a, coords_J_1_b);
        xs[123] = vs[123].v_exp(m_k_x_inter_H_J_0, coords_H_3_a, coords_J_2_b);
        xs[124] = vs[124].v_coul(m_k_x_inter_H_X_0, coords_H_3_a, coords_X_1_b);
        xs[125] = vs[125].v_coul(m_k_x_inter_H_X_0, coords_H_3_a, coords_X_2_b);
        xs[126] = vs[126].v_exp(m_k_x_intra_I_J_1, coords_I_1_b, coords_J_1_b);
        xs[127] = vs[127].v_exp(m_k_x_intra_I_J_1, coords_I_1_b, coords_J_2_b);
        xs[128] = vs[128].v_exp(m_k_x_intra_J_J_1, coords_J_1_b, coords_J_2_b);

        double gsw12 = 0.0;
        double sw12 = f_switch(d12r, gsw12);

        sw = sw12;

        energies[j] = my_poly.eval(xs,coefficients.data(),gxs);
        energies_sw[j] = energies[j]*sw;

        for (size_t i = 0; i < 129; i++) {
            gxs[i] *= sw;
        }

        vs[0].grads(gxs[0], coords_A_1_a_g, coords_B_1_a_g, coords_A_1_a, coords_B_1_a);
        vs[1].grads(gxs[1], coords_A_1_a_g, coords_C_1_a_g, coords_A_1_a, coords_C_1_a);
        vs[2].grads(gxs[2], coords_A_1_a_g, coords_D_1_a_g, coords_A_1_a, coords_D_1_a);
        vs[3].grads(gxs[3], coords_A_1_a_g, coords_D_2_a_g, coords_A_1_a, coords_D_2_a);
        vs[4].grads(gxs[4], coords_A_1_a_g, coords_D_3_a_g, coords_A_1_a, coords_D_3_a);
        vs[5].grads(gxs[5], coords_A_1_a_g, coords_E_1_a_g, coords_A_1_a, coords_E_1_a);
        vs[6].grads(gxs[6], coords_A_1_a_g, coords_F_1_a_g, coords_A_1_a, coords_F_1_a);
        vs[7].grads(gxs[7], coords_A_1_a_g, coords_G_1_a_g, coords_A_1_a, coords_G_1_a);
        vs[8].grads(gxs[8], coords_A_1_a_g, coords_H_1_a_g, coords_A_1_a, coords_H_1_a);
        vs[9].grads(gxs[9], coords_A_1_a_g, coords_H_2_a_g, coords_A_1_a, coords_H_2_a);
        vs[10].grads(gxs[10], coords_A_1_a_g, coords_H_3_a_g, coords_A_1_a, coords_H_3_a);
        vs[11].grads(gxs[11], coords_A_1_a_g, coords_I_1_b_g, coords_A_1_a, coords_I_1_b);
        vs[12].grads(gxs[12], coords_A_1_a_g, coords_J_1_b_g, coords_A_1_a, coords_J_1_b);
        vs[13].grads(gxs[13], coords_A_1_a_g, coords_J_2_b_g, coords_A_1_a, coords_J_2_b);
        vs[14].grads(gxs[14], coords_A_1_a_g, coords_X_1_b_g, coords_A_1_a, coords_X_1_b);
        vs[15].grads(gxs[15], coords_A_1_a_g, coords_X_2_b_g, coords_A_1_a, coords_X_2_b);
        vs[16].grads(gxs[16], coords_B_1_a_g, coords_C_1_a_g, coords_B_1_a, coords_C_1_a);
        vs[17].grads(gxs[17], coords_B_1_a_g, coords_D_1_a_g, coords_B_1_a, coords_D_1_a);
        vs[18].grads(gxs[18], coords_B_1_a_g, coords_D_2_a_g, coords_B_1_a, coords_D_2_a);
        vs[19].grads(gxs[19], coords_B_1_a_g, coords_D_3_a_g, coords_B_1_a, coords_D_3_a);
        vs[20].grads(gxs[20], coords_B_1_a_g, coords_E_1_a_g, coords_B_1_a, coords_E_1_a);
        vs[21].grads(gxs[21], coords_B_1_a_g, coords_F_1_a_g, coords_B_1_a, coords_F_1_a);
        vs[22].grads(gxs[22], coords_B_1_a_g, coords_G_1_a_g, coords_B_1_a, coords_G_1_a);
        vs[23].grads(gxs[23], coords_B_1_a_g, coords_H_1_a_g, coords_B_1_a, coords_H_1_a);
        vs[24].grads(gxs[24], coords_B_1_a_g, coords_H_2_a_g, coords_B_1_a, coords_H_2_a);
        vs[25].grads(gxs[25], coords_B_1_a_g, coords_H_3_a_g, coords_B_1_a, coords_H_3_a);
        vs[26].grads(gxs[26], coords_B_1_a_g, coords_I_1_b_g, coords_B_1_a, coords_I_1_b);
        vs[27].grads(gxs[27], coords_B_1_a_g, coords_J_1_b_g, coords_B_1_a, coords_J_1_b);
        vs[28].grads(gxs[28], coords_B_1_a_g, coords_J_2_b_g, coords_B_1_a, coords_J_2_b);
        vs[29].grads(gxs[29], coords_B_1_a_g, coords_X_1_b_g, coords_B_1_a, coords_X_1_b);
        vs[30].grads(gxs[30], coords_B_1_a_g, coords_X_2_b_g, coords_B_1_a, coords_X_2_b);
        vs[31].grads(gxs[31], coords_C_1_a_g, coords_D_1_a_g, coords_C_1_a, coords_D_1_a);
        vs[32].grads(gxs[32], coords_C_1_a_g, coords_D_2_a_g, coords_C_1_a, coords_D_2_a);
        vs[33].grads(gxs[33], coords_C_1_a_g, coords_D_3_a_g, coords_C_1_a, coords_D_3_a);
        vs[34].grads(gxs[34], coords_C_1_a_g, coords_E_1_a_g, coords_C_1_a, coords_E_1_a);
        vs[35].grads(gxs[35], coords_C_1_a_g, coords_F_1_a_g, coords_C_1_a, coords_F_1_a);
        vs[36].grads(gxs[36], coords_C_1_a_g, coords_G_1_a_g, coords_C_1_a, coords_G_1_a);
        vs[37].grads(gxs[37], coords_C_1_a_g, coords_H_1_a_g, coords_C_1_a, coords_H_1_a);
        vs[38].grads(gxs[38], coords_C_1_a_g, coords_H_2_a_g, coords_C_1_a, coords_H_2_a);
        vs[39].grads(gxs[39], coords_C_1_a_g, coords_H_3_a_g, coords_C_1_a, coords_H_3_a);
        vs[40].grads(gxs[40], coords_C_1_a_g, coords_I_1_b_g, coords_C_1_a, coords_I_1_b);
        vs[41].grads(gxs[41], coords_C_1_a_g, coords_J_1_b_g, coords_C_1_a, coords_J_1_b);
        vs[42].grads(gxs[42], coords_C_1_a_g, coords_J_2_b_g, coords_C_1_a, coords_J_2_b);
        vs[43].grads(gxs[43], coords_C_1_a_g, coords_X_1_b_g, coords_C_1_a, coords_X_1_b);
        vs[44].grads(gxs[44], coords_C_1_a_g, coords_X_2_b_g, coords_C_1_a, coords_X_2_b);
        vs[45].grads(gxs[45], coords_D_1_a_g, coords_D_2_a_g, coords_D_1_a, coords_D_2_a);
        vs[46].grads(gxs[46], coords_D_1_a_g, coords_D_3_a_g, coords_D_1_a, coords_D_3_a);
        vs[47].grads(gxs[47], coords_D_1_a_g, coords_E_1_a_g, coords_D_1_a, coords_E_1_a);
        vs[48].grads(gxs[48], coords_D_1_a_g, coords_F_1_a_g, coords_D_1_a, coords_F_1_a);
        vs[49].grads(gxs[49], coords_D_1_a_g, coords_G_1_a_g, coords_D_1_a, coords_G_1_a);
        vs[50].grads(gxs[50], coords_D_1_a_g, coords_H_1_a_g, coords_D_1_a, coords_H_1_a);
        vs[51].grads(gxs[51], coords_D_1_a_g, coords_H_2_a_g, coords_D_1_a, coords_H_2_a);
        vs[52].grads(gxs[52], coords_D_1_a_g, coords_H_3_a_g, coords_D_1_a, coords_H_3_a);
        vs[53].grads(gxs[53], coords_D_1_a_g, coords_I_1_b_g, coords_D_1_a, coords_I_1_b);
        vs[54].grads(gxs[54], coords_D_1_a_g, coords_J_1_b_g, coords_D_1_a, coords_J_1_b);
        vs[55].grads(gxs[55], coords_D_1_a_g, coords_J_2_b_g, coords_D_1_a, coords_J_2_b);
        vs[56].grads(gxs[56], coords_D_1_a_g, coords_X_1_b_g, coords_D_1_a, coords_X_1_b);
        vs[57].grads(gxs[57], coords_D_1_a_g, coords_X_2_b_g, coords_D_1_a, coords_X_2_b);
        vs[58].grads(gxs[58], coords_D_2_a_g, coords_D_3_a_g, coords_D_2_a, coords_D_3_a);
        vs[59].grads(gxs[59], coords_D_2_a_g, coords_E_1_a_g, coords_D_2_a, coords_E_1_a);
        vs[60].grads(gxs[60], coords_D_2_a_g, coords_F_1_a_g, coords_D_2_a, coords_F_1_a);
        vs[61].grads(gxs[61], coords_D_2_a_g, coords_G_1_a_g, coords_D_2_a, coords_G_1_a);
        vs[62].grads(gxs[62], coords_D_2_a_g, coords_H_1_a_g, coords_D_2_a, coords_H_1_a);
        vs[63].grads(gxs[63], coords_D_2_a_g, coords_H_2_a_g, coords_D_2_a, coords_H_2_a);
        vs[64].grads(gxs[64], coords_D_2_a_g, coords_H_3_a_g, coords_D_2_a, coords_H_3_a);
        vs[65].grads(gxs[65], coords_D_2_a_g, coords_I_1_b_g, coords_D_2_a, coords_I_1_b);
        vs[66].grads(gxs[66], coords_D_2_a_g, coords_J_1_b_g, coords_D_2_a, coords_J_1_b);
        vs[67].grads(gxs[67], coords_D_2_a_g, coords_J_2_b_g, coords_D_2_a, coords_J_2_b);
        vs[68].grads(gxs[68], coords_D_2_a_g, coords_X_1_b_g, coords_D_2_a, coords_X_1_b);
        vs[69].grads(gxs[69], coords_D_2_a_g, coords_X_2_b_g, coords_D_2_a, coords_X_2_b);
        vs[70].grads(gxs[70], coords_D_3_a_g, coords_E_1_a_g, coords_D_3_a, coords_E_1_a);
        vs[71].grads(gxs[71], coords_D_3_a_g, coords_F_1_a_g, coords_D_3_a, coords_F_1_a);
        vs[72].grads(gxs[72], coords_D_3_a_g, coords_G_1_a_g, coords_D_3_a, coords_G_1_a);
        vs[73].grads(gxs[73], coords_D_3_a_g, coords_H_1_a_g, coords_D_3_a, coords_H_1_a);
        vs[74].grads(gxs[74], coords_D_3_a_g, coords_H_2_a_g, coords_D_3_a, coords_H_2_a);
        vs[75].grads(gxs[75], coords_D_3_a_g, coords_H_3_a_g, coords_D_3_a, coords_H_3_a);
        vs[76].grads(gxs[76], coords_D_3_a_g, coords_I_1_b_g, coords_D_3_a, coords_I_1_b);
        vs[77].grads(gxs[77], coords_D_3_a_g, coords_J_1_b_g, coords_D_3_a, coords_J_1_b);
        vs[78].grads(gxs[78], coords_D_3_a_g, coords_J_2_b_g, coords_D_3_a, coords_J_2_b);
        vs[79].grads(gxs[79], coords_D_3_a_g, coords_X_1_b_g, coords_D_3_a, coords_X_1_b);
        vs[80].grads(gxs[80], coords_D_3_a_g, coords_X_2_b_g, coords_D_3_a, coords_X_2_b);
        vs[81].grads(gxs[81], coords_E_1_a_g, coords_F_1_a_g, coords_E_1_a, coords_F_1_a);
        vs[82].grads(gxs[82], coords_E_1_a_g, coords_G_1_a_g, coords_E_1_a, coords_G_1_a);
        vs[83].grads(gxs[83], coords_E_1_a_g, coords_H_1_a_g, coords_E_1_a, coords_H_1_a);
        vs[84].grads(gxs[84], coords_E_1_a_g, coords_H_2_a_g, coords_E_1_a, coords_H_2_a);
        vs[85].grads(gxs[85], coords_E_1_a_g, coords_H_3_a_g, coords_E_1_a, coords_H_3_a);
        vs[86].grads(gxs[86], coords_E_1_a_g, coords_I_1_b_g, coords_E_1_a, coords_I_1_b);
        vs[87].grads(gxs[87], coords_E_1_a_g, coords_J_1_b_g, coords_E_1_a, coords_J_1_b);
        vs[88].grads(gxs[88], coords_E_1_a_g, coords_J_2_b_g, coords_E_1_a, coords_J_2_b);
        vs[89].grads(gxs[89], coords_E_1_a_g, coords_X_1_b_g, coords_E_1_a, coords_X_1_b);
        vs[90].grads(gxs[90], coords_E_1_a_g, coords_X_2_b_g, coords_E_1_a, coords_X_2_b);
        vs[91].grads(gxs[91], coords_F_1_a_g, coords_G_1_a_g, coords_F_1_a, coords_G_1_a);
        vs[92].grads(gxs[92], coords_F_1_a_g, coords_H_1_a_g, coords_F_1_a, coords_H_1_a);
        vs[93].grads(gxs[93], coords_F_1_a_g, coords_H_2_a_g, coords_F_1_a, coords_H_2_a);
        vs[94].grads(gxs[94], coords_F_1_a_g, coords_H_3_a_g, coords_F_1_a, coords_H_3_a);
        vs[95].grads(gxs[95], coords_F_1_a_g, coords_I_1_b_g, coords_F_1_a, coords_I_1_b);
        vs[96].grads(gxs[96], coords_F_1_a_g, coords_J_1_b_g, coords_F_1_a, coords_J_1_b);
        vs[97].grads(gxs[97], coords_F_1_a_g, coords_J_2_b_g, coords_F_1_a, coords_J_2_b);
        vs[98].grads(gxs[98], coords_F_1_a_g, coords_X_1_b_g, coords_F_1_a, coords_X_1_b);
        vs[99].grads(gxs[99], coords_F_1_a_g, coords_X_2_b_g, coords_F_1_a, coords_X_2_b);
        vs[100].grads(gxs[100], coords_G_1_a_g, coords_H_1_a_g, coords_G_1_a, coords_H_1_a);
        vs[101].grads(gxs[101], coords_G_1_a_g, coords_H_2_a_g, coords_G_1_a, coords_H_2_a);
        vs[102].grads(gxs[102], coords_G_1_a_g, coords_H_3_a_g, coords_G_1_a, coords_H_3_a);
        vs[103].grads(gxs[103], coords_G_1_a_g, coords_I_1_b_g, coords_G_1_a, coords_I_1_b);
        vs[104].grads(gxs[104], coords_G_1_a_g, coords_J_1_b_g, coords_G_1_a, coords_J_1_b);
        vs[105].grads(gxs[105], coords_G_1_a_g, coords_J_2_b_g, coords_G_1_a, coords_J_2_b);
        vs[106].grads(gxs[106], coords_G_1_a_g, coords_X_1_b_g, coords_G_1_a, coords_X_1_b);
        vs[107].grads(gxs[107], coords_G_1_a_g, coords_X_2_b_g, coords_G_1_a, coords_X_2_b);
        vs[108].grads(gxs[108], coords_H_1_a_g, coords_H_2_a_g, coords_H_1_a, coords_H_2_a);
        vs[109].grads(gxs[109], coords_H_1_a_g, coords_H_3_a_g, coords_H_1_a, coords_H_3_a);
        vs[110].grads(gxs[110], coords_H_1_a_g, coords_I_1_b_g, coords_H_1_a, coords_I_1_b);
        vs[111].grads(gxs[111], coords_H_1_a_g, coords_J_1_b_g, coords_H_1_a, coords_J_1_b);
        vs[112].grads(gxs[112], coords_H_1_a_g, coords_J_2_b_g, coords_H_1_a, coords_J_2_b);
        vs[113].grads(gxs[113], coords_H_1_a_g, coords_X_1_b_g, coords_H_1_a, coords_X_1_b);
        vs[114].grads(gxs[114], coords_H_1_a_g, coords_X_2_b_g, coords_H_1_a, coords_X_2_b);
        vs[115].grads(gxs[115], coords_H_2_a_g, coords_H_3_a_g, coords_H_2_a, coords_H_3_a);
        vs[116].grads(gxs[116], coords_H_2_a_g, coords_I_1_b_g, coords_H_2_a, coords_I_1_b);
        vs[117].grads(gxs[117], coords_H_2_a_g, coords_J_1_b_g, coords_H_2_a, coords_J_1_b);
        vs[118].grads(gxs[118], coords_H_2_a_g, coords_J_2_b_g, coords_H_2_a, coords_J_2_b);
        vs[119].grads(gxs[119], coords_H_2_a_g, coords_X_1_b_g, coords_H_2_a, coords_X_1_b);
        vs[120].grads(gxs[120], coords_H_2_a_g, coords_X_2_b_g, coords_H_2_a, coords_X_2_b);
        vs[121].grads(gxs[121], coords_H_3_a_g, coords_I_1_b_g, coords_H_3_a, coords_I_1_b);
        vs[122].grads(gxs[122], coords_H_3_a_g, coords_J_1_b_g, coords_H_3_a, coords_J_1_b);
        vs[123].grads(gxs[123], coords_H_3_a_g, coords_J_2_b_g, coords_H_3_a, coords_J_2_b);
        vs[124].grads(gxs[124], coords_H_3_a_g, coords_X_1_b_g, coords_H_3_a, coords_X_1_b);
        vs[125].grads(gxs[125], coords_H_3_a_g, coords_X_2_b_g, coords_H_3_a, coords_X_2_b);
        vs[126].grads(gxs[126], coords_I_1_b_g, coords_J_1_b_g, coords_I_1_b, coords_J_1_b);
        vs[127].grads(gxs[127], coords_I_1_b_g, coords_J_2_b_g, coords_I_1_b, coords_J_2_b);
        vs[128].grads(gxs[128], coords_J_1_b_g, coords_J_2_b_g, coords_J_1_b, coords_J_2_b);

        m2.grads(coords_X_1_b_g, coords_X_2_b_g, w12, wcross, coords_I_1_b_g);
        gsw12 *= (1.0)*energies[j]/d12r;


        for (size_t i = 0; i < 3; i++) {
            gradients[0 + i] += 0.0 + (gsw12*d12[i]);
            gradients[36 + i] += 0.0 - (gsw12*d12[i]);
        }


        for (size_t i = 0; i < 36; i++) {
            grad1[i + j*36] += gradients[0 + i];
        }


        for (size_t i = 0; i < 9; i++) {
            grad2[i + j*9] += gradients[36 + i];
        }

        
        if (virial != 0) {
        
            (*virial)[0] += -coords_A_1_a[0]*coords_A_1_a_g[0]
                        -coords_B_1_a[0]*coords_B_1_a_g[0]
                        -coords_C_1_a[0]*coords_C_1_a_g[0]
                        -coords_D_1_a[0]*coords_D_1_a_g[0]
                        -coords_D_2_a[0]*coords_D_2_a_g[0]
                        -coords_D_3_a[0]*coords_D_3_a_g[0]
                        -coords_E_1_a[0]*coords_E_1_a_g[0]
                        -coords_F_1_a[0]*coords_F_1_a_g[0]
                        -coords_G_1_a[0]*coords_G_1_a_g[0]
                        -coords_H_1_a[0]*coords_H_1_a_g[0]
                        -coords_H_2_a[0]*coords_H_2_a_g[0]
                        -coords_H_3_a[0]*coords_H_3_a_g[0]
                        -coords_I_1_b[0]*coords_I_1_b_g[0]
                        -coords_J_1_b[0]*coords_J_1_b_g[0]
                        -coords_J_2_b[0]*coords_J_2_b_g[0];

        
            (*virial)[1] += -coords_A_1_a[0]*coords_A_1_a_g[1]
                        -coords_B_1_a[0]*coords_B_1_a_g[1]
                        -coords_C_1_a[0]*coords_C_1_a_g[1]
                        -coords_D_1_a[0]*coords_D_1_a_g[1]
                        -coords_D_2_a[0]*coords_D_2_a_g[1]
                        -coords_D_3_a[0]*coords_D_3_a_g[1]
                        -coords_E_1_a[0]*coords_E_1_a_g[1]
                        -coords_F_1_a[0]*coords_F_1_a_g[1]
                        -coords_G_1_a[0]*coords_G_1_a_g[1]
                        -coords_H_1_a[0]*coords_H_1_a_g[1]
                        -coords_H_2_a[0]*coords_H_2_a_g[1]
                        -coords_H_3_a[0]*coords_H_3_a_g[1]
                        -coords_I_1_b[0]*coords_I_1_b_g[1]
                        -coords_J_1_b[0]*coords_J_1_b_g[1]
                        -coords_J_2_b[0]*coords_J_2_b_g[1];

        
            (*virial)[2] += -coords_A_1_a[0]*coords_A_1_a_g[2]
                        -coords_B_1_a[0]*coords_B_1_a_g[2]
                        -coords_C_1_a[0]*coords_C_1_a_g[2]
                        -coords_D_1_a[0]*coords_D_1_a_g[2]
                        -coords_D_2_a[0]*coords_D_2_a_g[2]
                        -coords_D_3_a[0]*coords_D_3_a_g[2]
                        -coords_E_1_a[0]*coords_E_1_a_g[2]
                        -coords_F_1_a[0]*coords_F_1_a_g[2]
                        -coords_G_1_a[0]*coords_G_1_a_g[2]
                        -coords_H_1_a[0]*coords_H_1_a_g[2]
                        -coords_H_2_a[0]*coords_H_2_a_g[2]
                        -coords_H_3_a[0]*coords_H_3_a_g[2]
                        -coords_I_1_b[0]*coords_I_1_b_g[2]
                        -coords_J_1_b[0]*coords_J_1_b_g[2]
                        -coords_J_2_b[0]*coords_J_2_b_g[2];

        
            (*virial)[4] += -coords_A_1_a[1]*coords_A_1_a_g[1]
                        -coords_B_1_a[1]*coords_B_1_a_g[1]
                        -coords_C_1_a[1]*coords_C_1_a_g[1]
                        -coords_D_1_a[1]*coords_D_1_a_g[1]
                        -coords_D_2_a[1]*coords_D_2_a_g[1]
                        -coords_D_3_a[1]*coords_D_3_a_g[1]
                        -coords_E_1_a[1]*coords_E_1_a_g[1]
                        -coords_F_1_a[1]*coords_F_1_a_g[1]
                        -coords_G_1_a[1]*coords_G_1_a_g[1]
                        -coords_H_1_a[1]*coords_H_1_a_g[1]
                        -coords_H_2_a[1]*coords_H_2_a_g[1]
                        -coords_H_3_a[1]*coords_H_3_a_g[1]
                        -coords_I_1_b[1]*coords_I_1_b_g[1]
                        -coords_J_1_b[1]*coords_J_1_b_g[1]
                        -coords_J_2_b[1]*coords_J_2_b_g[1];

        
            (*virial)[5] += -coords_A_1_a[1]*coords_A_1_a_g[2]
                        -coords_B_1_a[1]*coords_B_1_a_g[2]
                        -coords_C_1_a[1]*coords_C_1_a_g[2]
                        -coords_D_1_a[1]*coords_D_1_a_g[2]
                        -coords_D_2_a[1]*coords_D_2_a_g[2]
                        -coords_D_3_a[1]*coords_D_3_a_g[2]
                        -coords_E_1_a[1]*coords_E_1_a_g[2]
                        -coords_F_1_a[1]*coords_F_1_a_g[2]
                        -coords_G_1_a[1]*coords_G_1_a_g[2]
                        -coords_H_1_a[1]*coords_H_1_a_g[2]
                        -coords_H_2_a[1]*coords_H_2_a_g[2]
                        -coords_H_3_a[1]*coords_H_3_a_g[2]
                        -coords_I_1_b[1]*coords_I_1_b_g[2]
                        -coords_J_1_b[1]*coords_J_1_b_g[2]
                        -coords_J_2_b[1]*coords_J_2_b_g[2];

        
            (*virial)[8] += -coords_A_1_a[2]*coords_A_1_a_g[2]
                        -coords_B_1_a[2]*coords_B_1_a_g[2]
                        -coords_C_1_a[2]*coords_C_1_a_g[2]
                        -coords_D_1_a[2]*coords_D_1_a_g[2]
                        -coords_D_2_a[2]*coords_D_2_a_g[2]
                        -coords_D_3_a[2]*coords_D_3_a_g[2]
                        -coords_E_1_a[2]*coords_E_1_a_g[2]
                        -coords_F_1_a[2]*coords_F_1_a_g[2]
                        -coords_G_1_a[2]*coords_G_1_a_g[2]
                        -coords_H_1_a[2]*coords_H_1_a_g[2]
                        -coords_H_2_a[2]*coords_H_2_a_g[2]
                        -coords_H_3_a[2]*coords_H_3_a_g[2]
                        -coords_I_1_b[2]*coords_I_1_b_g[2]
                        -coords_J_1_b[2]*coords_J_1_b_g[2]
                        -coords_J_2_b[2]*coords_J_2_b_g[2];

            (*virial)[3] = (*virial)[1];
            (*virial)[6] = (*virial)[2];
            (*virial)[7] = (*virial)[5];


        }


        // Add LJ repulsions
        double repulsion = 0.0;
        std::vector<std::pair<int,int>> pair12 = {{0,1},{0,2},{0,6},{2,3},{2,4},{2,5},{6,7},{6,8},{8,9},{8,10},{8,11},{12,13},{12,14}};
        std::vector<std::pair<int,int>> pair13 = {{1, 2}, {7, 8}, {6, 9}, {2, 6}, {10, 11}, {4, 5}, {6, 11}, {6, 10}, {0, 7}, {9, 10}, {9, 11}, {0, 5}, {1, 6}, {0, 4}, {0, 3}, {0, 8}, {3, 4}, {3, 5}, {13, 14}};
        std::vector<std::pair<int,int>> pair14 = {{1, 3}, {5, 6}, {2, 8}, {0, 10}, {7, 11}, {1, 5}, {0, 11}, {3, 6}, {7, 10}, {1, 4}, {7, 9}, {2, 7}, {4, 6}, {1, 8}, {1, 7}, {0, 9}};


        for (int first_atom_idx = 0; first_atom_idx < xyz.size()/3-1; first_atom_idx++) {
            double x1 = xyz[first_atom_idx*3];
            double y1 = xyz[first_atom_idx*3+1];
            double z1 = xyz[first_atom_idx*3+2];
            for (int second_atom_idx = first_atom_idx+1; second_atom_idx < xyz.size()/3; second_atom_idx++){
                double x2 = xyz[second_atom_idx*3];
                double y2 = xyz[second_atom_idx*3+1];
                double z2 = xyz[second_atom_idx*3+2];
                double m_lj;

                // Choose lj coefficient
                std::pair<int,int> atompair(first_atom_idx, second_atom_idx);
                if (std::count(pair12.begin(), pair12.end(), atompair)) {
                    m_lj=m_A;
                }
                else if (std::count(pair13.begin(), pair13.end(), atompair)) {
                    m_lj=m_B*1000.0;
                }
                else if (std::count(pair14.begin(), pair14.end(), atompair)) {
                    m_lj=m_C*1000.0;
                }
                else {
                    m_lj=m_D*1000.0;
                }

                // Update energies and repulsions
                double dist = std::sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2));
                energies[j] += m_lj / std::pow(dist,12);
                energies_sw[j] += m_lj / std::pow(dist,12);
                repulsions[j] += m_lj / std::pow(dist,12);

                // Update Gradients
                // F = A / r(x)^12
                // F' = - 12A / r(x)^13 * r'(x)
                if (first_atom_idx < 12) {
                    grad1[36*j+3*first_atom_idx]   -= 12*m_lj/std::pow(dist, 14)*(x1-x2);
                    grad1[36*j+3*first_atom_idx+1] -= 12*m_lj/std::pow(dist, 14)*(y1-y2);
                    grad1[36*j+3*first_atom_idx+2] -= 12*m_lj/std::pow(dist, 14)*(z1-z2);
                }
                else {
                    grad2[9*j+3*(first_atom_idx-12)]     -= 12*m_lj/std::pow(dist, 14)*(x1-x2);
                    grad2[9*j+3*(first_atom_idx-12)+1]   -= 12*m_lj/std::pow(dist, 14)*(y1-y2);
                    grad2[9*j+3*(first_atom_idx-12)+2]   -= 12*m_lj/std::pow(dist, 14)*(z1-z2);
                }
                
                if (second_atom_idx < 12) {
                    grad1[36*j+3*second_atom_idx]   += 12*m_lj/std::pow(dist, 14)*(x1-x2);
                    grad1[36*j+3*second_atom_idx+1] += 12*m_lj/std::pow(dist, 14)*(y1-y2);
                    grad1[36*j+3*second_atom_idx+2] += 12*m_lj/std::pow(dist, 14)*(z1-z2);
                }
                else {
                    grad2[9*j+3*(second_atom_idx-12)]    += 12*m_lj/std::pow(dist, 14)*(x1-x2);
                    grad2[9*j+3*(second_atom_idx-12)+1]  += 12*m_lj/std::pow(dist, 14)*(y1-y2);
                    grad2[9*j+3*(second_atom_idx-12)+2]  += 12*m_lj/std::pow(dist, 14)*(z1-z2);
                }


                // Update Virial
                (*virial)[0] -= x1 * - 12 * m_lj / std::pow(dist, 13) * (x1-x2) / (dist) + x2 * 12 * m_lj / std::pow(dist, 13) * (x1-x2) / (dist); // x*2 component
                (*virial)[4] -= y1 * - 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist) + y2 * 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist); // y*2 component
                (*virial)[8] -= z1 * - 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist) + z2 * 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist); // z*2 component
        
                (*virial)[1] -= x1 * - 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist) + x2 * 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist); // x*y component
                (*virial)[2] -= x1 * - 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist) + x2 * 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist); // x*z component
                (*virial)[5] -= y1 * - 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist) + y2 * 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist); // y*z component
        
                (*virial)[3] -= x1 * - 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist) + x2 * 12 * m_lj / std::pow(dist, 13) * (y1-y2) / (dist); // x*y component
                (*virial)[6] -= x1 * - 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist) + x2 * 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist); // x*z component
                (*virial)[7] -= y1 * - 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist) + y2 * 12 * m_lj / std::pow(dist, 13) * (z1-z2) / (dist); // y*z component
   
            }
        }
        

    }


    double energy = 0.0;
    for (size_t i = 0; i < n; i++)
        energy += energies_sw[i];

    return energy;

}

//----------------------------------------------------------------------------//
} // namespace mbnrg_A1B1C1D3E1F1G1H3_I1J2X2_deg2
